{"version":3,"sources":["constants.js","lwjs.js","gauge.js","ajax.js","server.js","config.js","provider_tree.js","packet.js","flash.js","index.js","utils.js","jquery-linedtextarea.js","jquery-events.js","streamer.js","mobile_number_validation.js","logging.js","analytics.js","timer.js"],"names":["yes_no","license","localizer","field_seperator","settings_prefix","default_line_format","default_delay","jQuery","children","val","LwJs","_v","reserved","_available_storage_engines","session","window","sessionStorage","permanent","localStorage","constructor","this","version","available_storage_engines","Object","keys","#composed","f","g","p","#piped","compose","fs","reduce","pipe","is_callable","includes","prototype","toString","call","Function","is_promise","type_of","then","clone","o","let","dest","assign","undefined","RegExp","exec","toLowerCase","storage_engine","engine_type","self","selected_engine","Proxy","deleteProperty","_","k","Error","clear","removeItem","get","getItem","set","v","setItem","random_number","maxlength","Number","String","Math","random","replace","substr","random_segment_number","length","floor","pow","random_array_element","arr","shuffle_array","Array","isArray","sort","async_delay","t","Promise","res","setTimeout","is_array","a","Boolean","assert_is_array","is_key","key","supported_types","in","container","map","fromEntries","entries","macleen_LwJs","Gauge","delay","isNaN","totalSegments","singleSegmentWidth","domGauge","domCountdown","reset","draw","segment","max","min","css","text","toFixed","stop","updateUI","Ajax","instance","RETHROW_ERRORS","get_json_error","e","responseJSON","message","status","get_text_error","statusText","simplifyError","console","error","JSON_error","Text_error","show_alert","filtered","content","showLoader","document","querySelectorAll","forEach","el","classList","remove","hideLoader","add","show_sending_loader","removeClass","soundTrack","getElementById","loop","config","get_entry","play","hide_sending_loader","addClass","pause","sendToServer","options","isDownload","url","ajaxUrl","settings","method","data","async","crossDomain","timeout","dataType","headers","Content-Type","beforeSend","isFormData","FormData","xhrFields","responseType","processData","contentType","resolve","reject","ajax","done","xhr","blob","link","filename","disposition","getResponseHeader","split","Blob","type","createElement","href","URL","createObjectURL","download","click","revokeObjectURL","fail","jqXHR","always","post","nonce","X-WP-Nonce","send_message","packet","get_available_providers","get_provider_fields","get_balance","providerSettings","get_account_info","install_plugin","form_data","get_plugins_tree","get_wp_leads","role","get_available_log_files","get_log_by_date","date","delete_log_by_date","get_available_analytics_files","get_analytics_file_by_path","path","delete_analytics_by_path","AjaxHttpServer","http","response","hasOwnProperty","providers","i","html","catch","prepare_provider_fields","ProviderTree","show_plugin_tree","context","Config","ui","#init_ui","pages","#init_pages","service_provider","#init_service_provider","processing","#init_processing","server","lw","sound_is_on","provider","add_ons","fields","provider-settings","local-settings","messages","indexes","leads","tags-settings","preview","is_accessible_by_jump","page","page_index","indexOf","set_page_accessibility_by_jump","is_accessible","reset_all_pages_accessibility","sender_id","total_leads","total_sent","total_messages","total_indexes","index_roll_in","index_sending_counter","use_shortner_code_as_route_arg","msg_url_mode","message_container","index_container","current_msg_pointer","current_index_pointer","name_format","ndx_with_packet_id","language","random_string_length","line_format","dial_code_length","sending_target_country_code","full_country_name","remove_successful_items","set_entry","reviewable_fields","get_next_rotation_msg","msg_container","get_next_index_link","ndx_container","__instance","$treeContainer","handle_tree_click_event","node","name","location","attr","dom_container","reload","fancytree","total","source","installed","purchasable","extensions","glyph","preset","Packet","char_table","parent_config","init","line_parts","line_fields","fixed_packet_parms","#init_packet_parms","packet_container","#init_packet_container","#set_fixed_parms","recipient","phone","email","full_name","generic_name","address","other_info","index","#set_field_markers","#convert","digits_str","result","trim","#set_packet_identifier","#random_str","Uint8Array","crypto","getRandomValues","from","dec2hex","join","#compose_message","msg","tags","tag","raw_tags","#set_generic_name","name_parts","nl","shift","recipient_name","#set_packet_container","line","field","other_data","nbr_of_line_parts","this_data","push","assemble","sequencer","yield","$","screenHeight","OPTIONS","setting","appendTo","closeHandler","default","time","sticky","fadeOut","closable","scrollTo","typesDefault","danger","encorder","formatOptions","extend","value","convert","resize","innerHeight","documentElement","clientHeight","innerWidth","clientWidth","flash","apply","arguments","load","append","defaultMethod","close","div","rect","find","addBack","bind","getBoundingClientRect","top","scrollIntoView","ready","show_pause_signal","show_resume_signal","update_total_sent","$total_messges_sent","stop_sending","gauge","msg_type","flag","enable_stage_buttons","show_restart_and_log_btn","successfull_end","interrupted_end","display_new_balance","balance","display_results","lead","prepend","show_composed_msg","display_message","init_for_start_of_sending_session","disable_stage_buttons","hide_restart_and_get_send_log_btn","start_sending","invalid_data_found","Streamer","generator","get_leads","stopButton","querySelector","pauseButton","resumeButton","delayTime","sendMessage","onMessageSent","onStart","onError","onStreamEnd","onCancel","onTick","onPause","onResume","onEnd","start","index_action","$e","args","get_sending_summary","run_js_function","fn","dec","substring","alert_text","setup_rotating_messages","form_inputs","setup_index_links","raw_lines","lines","prepare_summary_panel","$content","show_log_btn","live_log_available","values","each","serializeArray","m","inputs","split_lines","construct_form_input_field","field_id","help","entry","option_name","selected","on","activate_provider_account_fetch_btn","stringify_provider_input_fields","input_fields","output","extract_provider_info_and_add_ons","provider_fields","$sender_id","supports_sender_id","global_info","help_text","placeholder","false","true","pre_provider_settings_html","provider_settings_html","get_provider_settings_html","input_fields_html","account_data_available","account_info_available","fields_are_filled_in","remove_provider_account_info","display_provider_account_info","page_fault","check_and_display","trigger","input","select","parseInt","text_content","numberedtextarea","color","borderColor","class","allowTabChar","nodeName","element","paddingLeft","paddingTop","lineNumbers","wrapper","insertAfter","detach","parents","parseFloat","width","renderLineNumbers","linesDiv","parent","count","paddingBottom","scrollTop","lineHeight","fontFamily","jquery","nodeType","selStart","textRange","which","focus","selectionStart","slice","selectionEnd","selection","createRange","collapse","current_fs","next_fs","previous_fs","left","opacity","animating","tabs","get_and_dump_leads","copyright_data","$this","info","preventDefault","change","formData","file","files","endsWith","selected_plugin","plugin_location","open","log_date","Logging","file_path","Analytics","dump_index","is","plugin_url","toggleClass","next","prop","eq","show","animate","step","now","mx","position","duration","complete","hide","easing","prev","right","stage_id","first","hash","tab_buttons","tab_panels","button","addEventListener","btn","panel","dataset","tab","cycle_tick","pause$","rxjs","BehaviorSubject","resume$","Subject","stop$","subscription","Subscription","isStopped","isStreamComplete","setupButtons","resume","#createMessageStream","Observable","observer","sendNext","getValue","log","take","subscribe","timer","start_ticker","tick_handle","setInterval","stop_ticker","clearInterval","messageStream$","takeUntil","err","cleanup","unsubscribe","form","mobileField","mobileNumber","test","currentPage","rowsPerPage","currentSendingDate","usage_licence","tableBody","tableHtml","header","created_at","updated_at","total_number_of_lines","successful_messages","failed_messages","row","logdate","raw_data","str","cleanedStr","JSON","parse","filter","item","generateTableHeaders","headerRow","innerHTML","th","innerText","appendChild","displayData","sending_date","end","showPopup","popup","popupData","toUpperCase","style","display","request","tdata","Provider","SenderID","Name","maxLength","Recipient","Sent","Balance","td","ceil","closePopup","size","sendingdate","filepath","lead_data","reacted","meta_data","HashIndex","Country","Clicked","Timer","TIMER_PORTION","$jquery_dom_timer","$jquery_dom_countdown","timer_instance","dom_timer","dom_countdown","_delay","cycle_count_down","#evoluate","w","#timer_cycle","cycle_slice","timer_evolution","run_timer_cycle","caller"],"mappings":"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","file":"bundle.min.js","sourcesContent":["//-----------------------------------\r\nconst yes_no          = ['No','Yes'];\r\nconst license         = localizer.license;\r\nconst field_seperator = ';';\r\nconst settings_prefix =  'provider_settings__';\r\nconst default_line_format = 'P-N';\r\nconst default_delay = +jQuery(\"#delay-box\").children(\"option:selected\").val();\r\n\r\n","/*\r\n******************************************************************************************\r\n* lw: LightWeight JS Helpers \r\n*     containing a handy storage engine \r\n*     (local and cross session) using the Browser native (session and local storage API)\r\n*     2 MB to 10 MB size of data can be stored on the client machine depending on the browser  \r\n*     for chrome: Web storage APIs (LocalStorage & SessionStorage ) remain fixed at 5 MB.\r\n*\r\n* Licence: MIT / free to use and distribute\r\n*\r\n* Author: C. Mahmoud / MacLeen 2024 v 2.0.0 / email: acutclub@gmail.com\r\n*\r\n******************************************************************************************\r\n*/\r\nclass LwJs {\r\n\r\n    static _v = \"LwJs v2.0.0 - macLeen 01-2024\";\r\n    static reserved = ['__engine_type__', ];\r\n    static _available_storage_engines = {\r\n        session:   window.sessionStorage,\r\n        permanent: window.localStorage\r\n    };\r\n\r\n\r\n    constructor( ) {\r\n        this.version = LwJs._v;\r\n        this.available_storage_engines = Object.keys( LwJs._available_storage_engines );\r\n    }\r\n\r\n   //********************************* */    \r\n \r\n    #composed( f, g ){\r\n        return function ( ...p ) {\r\n            return f( g( ...p ));\r\n        }\r\n    }    \r\n\r\n    #piped( f, g ){\r\n        return function( ...p ) {\r\n            return g( f( ...p ));   \r\n        }\r\n     }    \r\n\r\n\r\n    compose( ...fs ) {\r\n        return fs.reduce( this.#composed );\r\n    }\r\n\r\n    pipe( ...fs ) {\r\n        return fs.reduce( this.#piped );\r\n    }\r\n\r\n    //*************************************************************\r\n\r\n    is_callable( f ) {\r\n        return ['[object AsyncFunction]', '[object Function]'].includes( Object.prototype.toString.call( f )) || \r\n                \"function\" === typeof f || f instanceof Function;\r\n    }\r\n\r\n    //*************************************************************\r\n    \r\n    is_promise( p ) {    \r\n        return this.type_of( p ) === 'promise' || this.is_callable( p.then );        \r\n    }\r\n\r\n    //*************************************************************\r\n    \r\n    clone( o ) { \r\n        let dest;\r\n        Object.assign( dest, ...o );\r\n        return dest;\r\n    }\r\n\r\n    /*************************************************************\r\n    * usage: l().type_of( o ) \r\n    *       possible return values:\r\n    *           - primitives ( number, string, boolean, null, undefined )\r\n    *           - function\r\n    *           - asyncfunction\r\n    *           - generatorfunction\r\n    *           - constructorfunction\r\n    *           - promise\r\n    *           - object\r\n    *           - array\r\n    * \r\n    *************************************************************\r\n    */\r\n    type_of( o ) {\r\n        return [ undefined, 'undefined', null ].includes( o ) ? o \r\n                : new RegExp(\"\\\\[.+ (.+)\\\\]\").exec({}.toString.call( o ).toLowerCase( ))[1];\r\n    }\r\n              \r\n    //************************************************************* \r\n\r\n    storage_engine( engine_type ) {\r\n\r\n        const self = this;\r\n        if ( engine_type in LwJs._available_storage_engines ) {\r\n             let selected_engine = LwJs._available_storage_engines[engine_type];\r\n\r\n             return new Proxy({ }, { \r\n\r\n                 deleteProperty( _, k ) {\r\n                         if ( LwJs.reserved.includes( k ))\r\n                              throw new Error(`access denied, ${k} is a reserved word.`);\r\n                         return k === 'all' ? selected_engine.clear( ) : selected_engine.removeItem( k );\r\n                 },\r\n                 get( _, k ) {\r\n                         return ( k === '__engine_type__') ? engine_type\r\n                              : ( selected_engine.getItem( k ) ?? 'undefined');\r\n                 },\r\n                 set( _, k, v ) {\r\n\r\n                     if ( LwJs.reserved.includes( k ))\r\n                          throw new Error(`access denied, ${k} is a reserved word.`);\r\n                     if ( self.type_of( k ) != 'string' || self.type_of( v ) != 'string')\r\n                          throw new Error(`Unsupported type. Both key and value must be strings.`);\r\n                     return selected_engine.setItem( k, v );\r\n                 },\r\n\r\n             })\r\n        } else throw new Error('Engine type is unavailable');\r\n    }\r\n\r\n    //*************************************************************\r\n\r\n    random_number( maxlength ){            \r\n        return Number(String(\tMath.random( )).replace('0.','').substr(0, maxlength ?? 20) );\r\n    }\r\n\r\n    //*************************************************************\r\n\r\n    random_segment_number( length ) {            \r\n        return Math.floor(Math.random() * ( Math.pow( 10, length )));\r\n    }\r\n\r\n    //*************************************************************\r\n\r\n    random_array_element( arr ) {\r\n        arr = this.type_of( arr ) === 'array' ? arr : [arr];\r\n        return arr[ this.random_segment_number( arr.length )];\r\n    }\r\n\r\n\r\n    //************************************************************* \r\n\r\n    shuffle_array( arr ) {\r\n        arr = Array.isArray( arr ) ? arr : [arr];\r\n        if ( arr.length > 1 )\r\n             arr = arr.sort(function(){ return Math.random() - 0.5});\r\n        return arr;\r\n    }\r\n\r\n    /************************************************************* \r\n     * usage: var l = lw( ); // create a lib instance\r\n     *        var wait = l.async_delay( milli_seonds );\r\n     *        var delayed_task = wait( task ); // task can be an object, a function or any other data type\r\n     * \r\n     * return values: \r\n     *      - returns a closure with milli_seconds as variable\r\n     *      - a function: with an object that it will use in the resolve process once finished\r\n     * \r\n     ************************************************************* \r\n    */\r\n    async_delay( t ) {\r\n        return function( v ) {\r\n            return new Promise( res => setTimeout(( ) => res( v ), t ));\r\n        }\r\n    }\r\n\r\n    //************************************************************* \r\n    \r\n    is_array( a ) {\r\n        return Boolean( this.type_of( a ) === 'array' );\r\n    }\r\n\r\n    //************************************************************* \r\n    \r\n    assert_is_array( a ) {\r\n        return this.is_array( a ) ? a : [ a ];\r\n    }\r\n\r\n    //************************************************************* \r\n\r\n    is_key( key ) {\r\n        const supported_types = ['boolean','object','string','number', 'array'];\r\n\r\n        return {\r\n            in: ( container ) => {\r\n                  const t = this.type_of( container );\r\n                  if ( supported_types.includes( t ))  {\r\n                       switch ( this.type_of( container )) {\r\n                            case 'boolean': return container === key;\r\n                            case 'array'  : return container.includes( key );\r\n                            case 'object' : return key in container;\r\n                            case 'string' : return container.includes( key.toString( ));\r\n                            case 'number' : return container.toString( ).includes( key.toString( ));\r\n                       }\r\n                  }else throw new Error('is_key.in function does not support that container type');\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    map( o, f ) {\r\n        return Object.fromEntries(Object.entries( o ).map(( [k, v] ) => [k, f( v )]));\r\n    }    \r\n    \r\n}\r\nwindow.macleen_LwJs = LwJs;","class Gauge {\r\n    constructor(delay) {\r\n        if (isNaN(delay) || delay < 1) {\r\n            throw new Error('Delay must be a whole non-zero number');\r\n        }\r\n\r\n        this.totalSegments = delay;\r\n        this.singleSegmentWidth = 100 / this.totalSegments;\r\n        this.domGauge     = jQuery('#gauge-meter');\r\n        this.domCountdown = jQuery('#delay-timer-countdown');\r\n\r\n        this.reset();\r\n    }\r\n\r\n    draw(segment) {\r\n        segment = Math.max(0, Math.min(segment, this.totalSegments));\r\n        this.domGauge.css(\"width\", (segment * this.singleSegmentWidth) + '%');\r\n        this.domCountdown.text(Number(segment).toFixed(0));\r\n    }\r\n\r\n    reset() {\r\n        this.draw(0);\r\n    }\r\n\r\n    stop() {\r\n        this.reset();\r\n    }\r\n\r\n    updateUI(segment) {\r\n        this.draw(segment);\r\n    }\r\n}","class Ajax {\r\n    static instance;\r\n    static RETHROW_ERRORS = false;\r\n\r\n    constructor() {\r\n        if (Ajax.instance) {\r\n            return Ajax.instance;\r\n        }\r\n        Ajax.instance = this;\r\n    }\r\n\r\n    get_json_error( e ) {\r\n        return e.responseJSON \r\n             ? `${e.responseJSON.message} - status: ${e.status}` : false;\r\n    }    \r\n\r\n    get_text_error( e ) {\r\n        return e.statusText\r\n             ? `${e.statusText} - status: ${e.status}` : false;\r\n    }    \r\n\r\n\r\n    simplifyError(e) {\r\n        console.error( 'simplifyError =>>>> ', e );\r\n        const JSON_error = this.get_json_error( e );     \r\n        const Text_error = this.get_text_error( e );     \r\n        const error = JSON_error ? JSON_error : Text_error;\r\n        if ( error ) show_alert( 'SMS-SENDER ERROR: '+ error, 'error' );\r\n    }\r\n\r\n\r\n    filtered(content) {\r\n        return content;\r\n    }\r\n\r\n\r\n    showLoader() {\r\n        document.querySelectorAll(\".package-loader\").forEach(el => el.classList.remove(\"hidden\"));\r\n    }\r\n\r\n    hideLoader() {\r\n        document.querySelectorAll(\".package-loader\").forEach(el => el.classList.add(\"hidden\"));\r\n    }\r\n\r\n    show_sending_loader() {\r\n        jQuery(\".loader-container\").removeClass(function(){\r\n            var soundTrack = document.getElementById(\"sound-track\");    \r\n            soundTrack.loop = !!1;\r\n            config.get_entry('sound_is_on') ? soundTrack.play( ) : void(0);\r\n            return \"hidden\";\r\n        });\r\n    }\r\n\r\n    hide_sending_loader() {\r\n        jQuery(\".loader-container\").addClass(function(){\r\n            var soundTrack = document.getElementById(\"sound-track\");    \r\n            soundTrack.pause( );\r\n            return \"hidden\";\r\n        });\r\n    }    \r\n\r\n    sendToServer(options, isDownload = false) {\r\n\r\n        options.url = \"..\" + localizer.ajaxUrl + \"/api\" + options.url;\r\n        let settings = {\r\n            url: \"\",\r\n            method: \"GET\",\r\n            data: \"\",\r\n            async: true,\r\n            crossDomain: true,\r\n            timeout: 30000, // 10 seconds timeout\r\n            dataType: \"JSON\",\r\n            headers: { \"Content-Type\": \"application/json; charset=UTF-8\" },\r\n            beforeSend: this.showLoader,\r\n            ...options,\r\n        };\r\n\r\n        let isFormData = settings.data instanceof FormData; // Check if data is FormData\r\n        if (isDownload) {\r\n            settings.dataType = null;\r\n            settings.xhrFields = { responseType: \"blob\" };\r\n        } else if ( isFormData ) {\r\n            settings.processData = false; // Prevent jQuery from processing FormData\r\n            settings.contentType = false;\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            jQuery.ajax(settings)\r\n            .done((data, status, xhr) => {\r\n                if (!isDownload) {\r\n                    resolve(this.filtered(data));\r\n                } else {\r\n                    const disposition = xhr.getResponseHeader(\"Content-Disposition\");\r\n                    const filename = disposition\r\n                        ? disposition.split(\"filename=\")[1]?.replace(/\"/g, \"\")\r\n                        : \"download.pdf\";\r\n\r\n                    const blob = new Blob([data], { type: \"application/pdf\" });\r\n                    const link = document.createElement(\"a\");\r\n                    link.href = window.URL.createObjectURL(blob);\r\n                    link.download = filename;\r\n                    link.click();\r\n                    window.URL.revokeObjectURL(link.href);\r\n\r\n                    resolve(blob);\r\n                }\r\n            })\r\n            .fail((jqXHR) => {this.simplifyError(jqXHR); reject()})\r\n            .always(() => this.hideLoader());\r\n        });\r\n    }\r\n\r\n    get(url, options = {}, isDownload = false) {\r\n        return this.sendToServer({ ...options, url, method: \"GET\" }, isDownload);\r\n    }\r\n\r\n    post(url, data, options = {}, isDownload = false) {\r\n        return this.sendToServer(\r\n            {\r\n                ...options,\r\n                url,\r\n                method: \"POST\",\r\n                headers: localizer.nonce ? { \"X-WP-Nonce\": localizer.nonce } : {},\r\n                data,\r\n            },\r\n            isDownload\r\n        );\r\n    }\r\n\r\n    send_message(packet) {\r\n        return this.post(`/${config.get_entry(\"provider\")}/send`, packet);\r\n    }\r\n\r\n    get_available_providers() {\r\n        return this.get(\"/providers\");\r\n    }\r\n\r\n    get_provider_fields() {\r\n        return this.get(`/${config.get_entry(\"provider\")}/fields`);\r\n    }\r\n\r\n    get_balance(providerSettings) {\r\n        return this.post(`/${config.get_entry(\"provider\")}/get_balance`, providerSettings);\r\n    }\r\n\r\n    get_account_info() {\r\n        return this.post(`/${config.get_entry(\"provider\")}/account/info`, config.get_entry(\"settings\"));\r\n    }\r\n    install_plugin( form_data ) {\r\n        return this.post(`/install/plugin`, form_data);\r\n    }\r\n\r\n    get_plugins_tree( ) {\r\n        return this.get(`/installed/plugins`);\r\n    }\r\n\r\n    get_wp_leads( role ){\r\n        return this.get(`/users/${role}`);\r\n    }\r\n\r\n\r\n    get_available_log_files(  ){\r\n        return this.get(`/log/all`);\r\n    }\r\n\r\n    get_log_by_date( date ){\r\n        return this.get(`/log/date/${date}`);\r\n    }\r\n\r\n    delete_log_by_date( date ){\r\n        return this.get(`/log/delete/${date}`);\r\n    }\r\n\r\n\r\n    get_available_analytics_files(  ){\r\n        return this.get(`/analytics/all`);\r\n    }\r\n\r\n    get_analytics_file_by_path( path ){\r\n        return this.post(`/analytics/file`, { path: path });\r\n    }\r\n\r\n    delete_analytics_by_path( path ){\r\n        return this.post(`/analytics/delete`, { path: path });\r\n    }\r\n\r\n}","class AjaxHttpServer {\r\n    \r\n    static instance;\r\n\r\n    constructor( ) { \r\n\r\n        if (AjaxHttpServer.instance) {\r\n            return AjaxHttpServer.instance;\r\n        }\r\n        this.http = new Ajax( );\r\n        AjaxHttpServer.instance = this;\r\n\r\n    }\r\n\r\n    get_available_providers() {\r\n        this.http.get_available_providers( ).then(function(response) {\r\n            if ( response && response.hasOwnProperty('data')) {            \r\n                 if ( response.data) {\r\n                      var providers = response.data;\r\n                      var options = '<option value=\"\">Select a service provider</option>';\r\n                      if ( providers.length) {\r\n                           for (var i = 0; i < providers.length; i++)\r\n                                options += '<option value=\"' + providers[i] + '\">' + providers[i] + '</option>';\r\n                      }\r\n                      return jQuery('#service_provider').html(options);\r\n                 }    \r\n            }\r\n            return show_alert('Respose format is inavalid', 'error');\r\n        }).catch(show_alert)        \r\n    }\r\n\r\n    get_provider_fields( ) {\r\n        this.http.get_provider_fields( ).then( function( response ) {\r\n             if ( response && response.hasOwnProperty('data')) {\r\n                  prepare_provider_fields( response.data );\r\n             } else Promise.reject('Invalid server response');\r\n        }).catch(show_alert);\r\n    }\r\n\r\n   \r\n    get_account_info( ) {\r\n        return this.http.get_account_info( );\r\n    }\r\n\r\n    install_plugin( blob ) {\r\n        return this.http.install_plugin( blob ).then(\r\n             response => {\r\n                (new ProviderTree( config )).show_plugin_tree( '.plugin-tree', true );                \r\n                return response.message;\r\n             });    \r\n    }\r\n\r\n    get_plugins_tree( context ) {\r\n        context = context ? context : this;\r\n        return context.http.get_plugins_tree( );\r\n    }\r\n\r\n    get_wp_leads( role ){\r\n        return this.http.get_wp_leads( role );\r\n    }\r\n\r\n    get_available_log_files( ){\r\n        return this.http.get_available_log_files( );\r\n    }\r\n\r\n    get_log_by_date( date ){\r\n        return this.http.get_log_by_date( date );\r\n    }\r\n\r\n    delete_log_by_date( date ){\r\n        return this.http.delete_log_by_date( date );\r\n    }\r\n\r\n    get_available_analytics_files( ){\r\n        return this.http.get_available_analytics_files( );\r\n    }\r\n\r\n    get_analytics_file_by_path( path ){\r\n        return this.http.get_analytics_file_by_path( path );\r\n    }\r\n    delete_analytics_by_path( path ){\r\n        return this.http.delete_analytics_by_path( path );\r\n    }\r\n\r\n}","class Config {\r\n    static instance;\r\n\r\n    constructor( default_delay, settings_prefix, default_line_format ) {\r\n\r\n        if (Config.instance) {\r\n            return Config.instance;\r\n        }\r\n\r\n        this.ui                = this.#init_ui( );\r\n        this.pages             = this.#init_pages( ); \r\n        this.service_provider  = this.#init_service_provider( settings_prefix );\r\n        this.processing        = this.#init_processing( default_line_format, default_delay );\r\n        this.server            = new AjaxHttpServer( );\r\n        this.lw                = new LwJs( );\r\n        Config.instance        = this;\r\n\r\n    }\r\n\r\n    #init_ui( ){\r\n        return {\r\n            sound_is_on: false,\r\n          }\r\n    }\r\n\r\n    #init_service_provider( settings_prefix ) {\r\n        return {            \r\n            provider:'',\r\n            add_ons: {},\r\n            settings_prefix: settings_prefix,\r\n            settings: {}, \r\n            fields: {},\r\n        }\r\n    }    \r\n\r\n\r\n    #init_pages( ) {\r\n        return {            \r\n            'provider': false,\r\n            'provider-settings': false,\r\n            'local-settings': false,\r\n            'messages': false,\r\n            'indexes': false,\r\n            'leads': false,\r\n            'tags-settings': false,\r\n            'preview': false,\r\n        }\r\n    }    \r\n\r\n    is_accessible_by_jump( page ) {\r\n        let pages = Object.keys( this.pages );\r\n        let page_index = pages.indexOf( page );\r\n        if ( page_index > 0 ) {\r\n             let previous_page = page_index - 1;\r\n             return this.pages[ pages[ previous_page ]];\r\n        }\r\n        return true;\r\n       \r\n    }    \r\n    \r\n    set_page_accessibility_by_jump( page, is_accessible ){\r\n        if ( page in this.pages )\r\n             this.pages[ page ] = is_accessible;\r\n    }\r\n\r\n\r\n    reset_all_pages_accessibility( ){\r\n        for( let page in this.pages )\r\n             this.pages[ page ] = false;\r\n    }\r\n\r\n    #init_processing( default_line_format, default_delay ) {\r\n        return { \r\n                sender_id: '',\r\n                delay: default_delay,\r\n                total_leads     : 0,\r\n                total_sent      : 0,\r\n                total_messages: 0,\r\n                total_indexes: 0,\r\n                index_roll_in: 1,\r\n                index_sending_counter: 0,\r\n                use_shortner_code_as_route_arg: 'NO',\r\n                msg_url_mode: '',\r\n                message_container: [],\r\n                index_container: [],\r\n                current_msg_pointer: -1,\r\n                current_index_pointer: 0,\r\n                name_format: 'FullName',\r\n                ndx_with_packet_id: false,\r\n                language: 'EN',\r\n                random_string_length: 10,\r\n                line_format: default_line_format,\r\n                dial_code_length: '',\r\n                sending_target_country_code: '',\r\n                full_country_name: '',\r\n                remove_successful_items: true,                \r\n              }\r\n    }\r\n    \r\n    set_entry( k, v ) {\r\n        if ( this.ui.hasOwnProperty( k ))\r\n             this.ui[k] = v;\r\n        else if ( this.processing.hasOwnProperty( k ))     \r\n             this.processing[k] = v;\r\n        else if ( this.service_provider.hasOwnProperty( k ))     \r\n             this.service_provider[k] = v;\r\n\r\n    }\r\n\r\n\r\n    get_entry( k ) {\r\n        if ( this.ui.hasOwnProperty( k ))\r\n             return this.ui[k];\r\n        else if ( this.processing.hasOwnProperty( k ))     \r\n             return this.processing[k];\r\n\r\n        return this.service_provider.hasOwnProperty( k )\r\n             ? this.service_provider[k] : undefined;\r\n\r\n    }\r\n\r\n    reviewable_fields( ){\r\n        return [\r\n            'dial_code_length', 'full_country_name','line_format',\r\n            'delay','sending_target_country_code','provider','msg_url_mode','index_roll_in',\r\n            'name_format','language','total_leads','total_messages','total_indexes','use_shortner_code_as_route_arg'\r\n        ]\r\n    }\r\n\r\n    get_next_rotation_msg(  ) {\r\n\r\n        let msg_container = this.get_entry('message_container');\r\n        if ( msg_container.length) {\r\n             this.processing.current_msg_pointer++;\r\n             if ( this.processing.current_msg_pointer >= msg_container.length )\r\n                  this.processing.current_msg_pointer = 0;\r\n            return msg_container[this.processing.current_msg_pointer];\r\n        }\r\n        \r\n        return '';\r\n\r\n    }\r\n\r\n    get_next_index_link( ) {\r\n\r\n        let ndx_container = this.get_entry('index_container');\r\n        if ( ndx_container.length) {\r\n             if ( this.processing.index_sending_counter <= this.processing.index_roll_in ) {\r\n                  this.processing.index_sending_counter++;\r\n             } else {\r\n                  this.processing.current_index_pointer++;\r\n                  this.processing.index_sending_counter = 1;\r\n             }\r\n             \r\n             if ( this.processing.current_index_pointer >= ndx_container.length )\r\n                  this.processing.current_index_pointer = 0;\r\n\r\n             return ndx_container[this.processing.current_index_pointer];\r\n        }\r\n        \r\n        return '';\r\n\r\n    }\r\n\r\n}","class ProviderTree {\n    static __instance = null;\n    static $treeContainer = null;  // Static property to hold the FancyTree instance\n\n    constructor(config = null) {\n        if (ProviderTree.__instance) return ProviderTree.__instance;\n        this.config = config;\n        ProviderTree.__instance = this;\n    }\n\n    static handle_tree_click_event(e, data) {\n        const node = data.node;\n        if (node.data.name && node.data.location) {\n            jQuery(\"#macleen-selected-purchasable-plugin-show\").text(node.data.name);\n            jQuery(\"#macleen-selected-purchasable-plugin-purchase\")\n                .attr('data-selected-plugin', node.data.name)\n                .attr('data-plugin-location', node.data.location);\n        } else {\n            jQuery(\"#macleen-selected-purchasable-plugin-show\").text('None');\n            jQuery(\"#macleen-selected-purchasable-plugin-purchase\")\n                .attr('data-selected-plugin', '')\n                .attr('data-plugin-location', '');\n        }\n    }\n\n    show_plugin_tree(dom_container, reload = false) {\n\n        const $treeContainer = jQuery(dom_container);\n        ProviderTree.$treeContainer = $treeContainer; // Store the instance in the static property\n\n        // If reload is true or FancyTree instance exists, proceed to destroy and rebuild the tree\n        if (reload || ProviderTree.$treeContainer.data(\"fancytree\")) {\n            // Destroy the existing FancyTree instance\n            ProviderTree.$treeContainer.fancytree(\"destroy\");\n\n            // Force a delay to ensure the DOM is updated\n            setTimeout(() => {\n                // Fetch new data and rebuild the tree\n                this.config.server.get_plugins_tree().then(response => {\n                    const total = response.data['total'];\n                    const source = response.data['source'];\n\n                    jQuery('#macleen-installed-plugins').text(total.installed);\n                    jQuery('#macleen-purchasable-plugins').text(total.purchasable);\n\n                    // Rebuild FancyTree\n                    ProviderTree.$treeContainer.fancytree({\n                        source: source,\n                        click: ProviderTree.handle_tree_click_event,\n                        extensions: [\"glyph\"],\n                        glyph: {\n                            preset: \"awesome4\",\n                        },\n                    });\n                }).catch(error => {\n                    console.error(\"Error fetching plugin tree:\", error);\n                });\n            }, 50); // Delay to allow DOM update\n        } else {\n            this.config.server.get_plugins_tree().then(response => {\n                const total = response.data['total'];\n                const source = response.data['source'];\n                jQuery('#macleen-installed-plugins').text(total.installed);\n                jQuery('#macleen-purchasable-plugins').text(total.purchasable);\n\n                // Initialize FancyTree for the first time\n                ProviderTree.$treeContainer.fancytree({\n                    source: source,\n                    click: ProviderTree.handle_tree_click_event,\n                    extensions: [\"glyph\"],\n                    glyph: {\n                        preset: \"awesome4\",\n                    },\n                });\n            }).catch(error => {\n                console.error(\"Error fetching plugin tree:\", error);\n            });\n        }\n    }\n}\n","class Packet {\r\n\r\n    static char_table = ['1','a','3','b','c','d','5','e','7','f'];  \r\n\r\n    constructor( parent_config ) {\r\n        this.init( parent_config );\r\n    }\r\n\r\n   \r\n    init( parent_config ){\r\n        this.config             = parent_config;\r\n        this.line_parts         = [];\r\n        this.line_fields        = {};\r\n        this.fixed_packet_parms = this.#init_packet_parms( );\r\n        this.packet_container   = this.#init_packet_container( );\r\n        this.#set_fixed_parms( );\r\n    }        \r\n\r\n    set_entry( k, v ) {\r\n\r\n        if ( this.fixed_packet_parms.hasOwnProperty( k ))\r\n             this.fixed_packet_parms[k] = v;\r\n        else if ( this.packet_container.hasOwnProperty( k ))     \r\n             this.packet_container[k] = v;\r\n    }\r\n\r\n\r\n    get_entry( k ) {\r\n\r\n        if ( this.fixed_packet_parms.hasOwnProperty( k ))\r\n             return this.fixed_packet_parms[k];\r\n        return this.packet_container.hasOwnProperty( k )\r\n             ? this.packet_container[k] : 'undefined';\r\n    }\r\n\r\n\r\n\r\n    #init_packet_parms( ) {\r\n        return {\r\n            sender_id: '', \r\n            dial_code_length:'',\r\n            sending_target_country_code:'',\r\n            full_country_name:'',\r\n            language:'', \r\n            msg_url_mode: 0,\r\n            ndx_with_packet_id: false, \r\n            use_shortner_code_as_route_arg:'NO',\r\n          }\r\n    }          \r\n         \r\n    #init_packet_container( ) {\r\n        return {\r\n            recipient: '', \r\n            message: '', \r\n            phone:'',\r\n            email: '', \r\n            full_name:'', \r\n            generic_name: '', \r\n            address: '', \r\n            other_info: '',\r\n            index:'',\r\n          }        \r\n    }\r\n\r\n    #set_fixed_parms(  ) {\r\n\r\n        for( let key in this.fixed_packet_parms ) {\r\n            this.fixed_packet_parms[key] = this.config.get_entry( key );\r\n        }\r\n        this.#set_field_markers( );\r\n\r\n    }\r\n\r\n\r\n\r\n    #convert( digits_str ) {\r\n        let result = '';\r\n        digits_str = digits_str.trim();\r\n        if (digits_str) {\r\n            digits_str.split('').forEach(function(v) {\r\n                if (typeof Packet.char_table[v] !== 'undefined')\r\n                    result += Packet.char_table[v];\r\n                else result += v;\r\n            })\r\n        }\r\n        return result;\r\n\r\n    }\r\n\r\n    #set_packet_identifier( ) {\r\n        let recipient = this.packet_container.phone.trim( )\r\n                      ? this.packet_container.phone : this.packet_container.recipient;\r\n        return this.#convert( recipient );\r\n    }\r\n\r\n\r\n\r\n    #random_str( ) {\r\n        let arr = new Uint8Array(( this.config.get_entry('random_string_length') || 40) / 2)\r\n        window.crypto.getRandomValues(arr)\r\n        return Array.from(arr, dec2hex).join('')\r\n    }\r\n\r\n \r\n    #compose_message( ) {\r\n        let msg = this.config.get_next_rotation_msg( );\r\n        if ( msg ) {\r\n             let tags   = [/__FULL_NAME__/g,/__PHONE__/g,/__RANDOM_STR__/g,/__ID__/g];\r\n             let fields = [\r\n                            this.packet_container.generic_name,\r\n                            this.packet_container.phone,\r\n                            this.#random_str( ),\r\n                            this.#set_packet_identifier( ),\r\n                          ];\r\n\r\n             tags.forEach(function( tag, index ){\r\n                msg = msg.replace(tag, fields[index]);\r\n             });\r\n    \r\n        }\r\n        return msg;\r\n    }\r\n\r\n \r\n\r\n    #set_field_markers( ) {\r\n\r\n        let raw_tags                  = this.config.get_entry('line_format');\r\n        raw_tags                      = raw_tags ? raw_tags : 'P-N';\r\n        let tags                      = raw_tags.split('-');\r\n        this.line_fields['phone']     = tags.indexOf('P');\r\n        this.line_fields['full_name'] = tags.indexOf('N');\r\n        this.line_fields['email']     = tags.indexOf('E');\r\n        this.line_fields['address']   = tags.indexOf('A');\r\n\r\n    }\r\n\r\n\r\n    #set_generic_name( ){\r\n\r\n        let full_name    = this.packet_container.full_name;\r\n        let generic_name = full_name;\r\n        let name_format  = this.config.get_entry('name_format');\r\n        let name_parts   = full_name.split(' ');\r\n        let nl           = name_parts.length;\r\n        name_format      = name_format ? name_format : 'FullName';\r\n        if ( nl ) {\r\n             switch ( name_format ) {\r\n                    case 'FirstName'  : generic_name = name_parts[0];break;\r\n                    case 'SecondName' : generic_name = nl > 1 ? name_parts[1] : name_parts[0];break;\r\n                    case 'LastName'   : generic_name = name_parts[nl-1];break;\r\n                    case 'skip1st'    : name_parts.shift();\r\n                                        generic_name = name_parts.length \r\n                                                     ? name_parts.join(' ') : recipient_name;\r\n                                        break;             \r\n             }\r\n        }\r\n\r\n        return generic_name;\r\n\r\n    }\r\n\r\n\r\n    #set_packet_container( line ) {\r\n\r\n        let ndx_with_packet_id = this.config.get_entry('index_with_packet_id');\r\n        let other_data         = [];\r\n        let line_parts         = line.split( field_seperator );\r\n        let nbr_of_line_parts  = line_parts.length;\r\n        \r\n        for( let field in this.line_fields ){\r\n             let i = this.line_fields[field];\r\n             if ( i >= 0 ) {\r\n                  let this_data = i < nbr_of_line_parts ? line_parts[i] : '';\r\n                  this_data = String(this_data).trim();\r\n                  if ( field in this.packet_container ){\r\n                       this.packet_container[field] = this_data;\r\n                  } else other_data.push( this_data );\r\n             }\r\n        }\r\n        this.packet_container.generic_name = this.#set_generic_name( );\r\n        this.packet_container.other_info   = other_data.join('|');\r\n        this.packet_container.recipient    = this.packet_container['phone'];\r\n        this.packet_container.index        = this.config.get_next_index_link( ) + ( ndx_with_packet_id ? '/'+this.#set_packet_identifier( ) : '');\r\n        this.packet_container.message      = this.#compose_message( );\r\n    }\r\n\r\n\r\n\r\n    // Main Assembly func\r\n    assemble( line ) {\r\n\r\n        line = line.trim();\r\n        if (line) {\r\n            jQuery('.composed-message-container').removeClass('hidden');\r\n            this.#set_packet_container( line );\r\n            return {...this.fixed_packet_parms, ...this.packet_container, ...this.config.get_entry('settings')}\r\n        }\r\n        return '';\r\n    }\r\n\r\n    sequencer( leads ) {\r\n        const self = this;\r\n        return function * (  ) {\r\n\r\n            let halted;\r\n            for (let i = 0; i < leads.length; i++) {\r\n                halted = yield self.assemble( leads[i] );\r\n                if ( halted ) return;\r\n            }\r\n        }\r\n    }    \r\n}","/*!\r\n * [flash-messenger]{@link https://github.com/emn178/flash-messenger}\r\n *\r\n * @version 0.3.0\r\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\r\n * @copyright Chen, Yi-Cyuan 2016-2019\r\n * @license MIT\r\n */\r\n(function ($) {\r\n    'use strict';\r\n  \r\n    var OPTIONS = ['type', 'time', 'sticky', 'fadeOut', 'closable', 'scrollTo', 'html'];\r\n    var TYPES = ['error', 'danger', 'info', 'notice', 'success', 'warning', 'alert'];\r\n  \r\n    var setting = {\r\n      appendTo: 'body',\r\n      container: '<div class=\"flash-messages\"></div>',\r\n      message: '<div class=\"flash-message {type}\">{message}<span class=\"flash-message-close\">&#10006</span></div>',\r\n      closeHandler: '.flash-message-close',\r\n      default: {\r\n        type: 'success',\r\n        time: 14000,\r\n        sticky: false,\r\n        fadeOut: 1000,\r\n        closable: true,\r\n        scrollTo: true,\r\n        html: false\r\n      },\r\n      typesDefault: {\r\n        error: {\r\n          sticky: true\r\n        },\r\n        danger: {\r\n          sticky: true\r\n        }\r\n      }\r\n    };\r\n  \r\n    var container, encorder = $('<div/>'), screenHeight, screenWidth;\r\n    function htmlEncode (message) {\r\n      return encorder.text(message).html();\r\n    }\r\n  \r\n    function formatOptions(options) {\r\n      var typesDefault = setting.typesDefault[options.type];\r\n      if (typesDefault) {\r\n        $.extend(options, $.extend({}, typesDefault, options));\r\n      }\r\n      OPTIONS.forEach(function (key) {\r\n        var value = options[key];\r\n        options[key] = value === undefined ? setting.default[key] : value;\r\n      });\r\n      if (setting.convert) {\r\n        setting.convert(options);\r\n      }\r\n    }\r\n  \r\n    function show(message, options) {\r\n      options = options || {};\r\n      formatOptions(options);\r\n      if (!options.html) {\r\n        message = htmlEncode(message);\r\n      }\r\n      var div = $(setting.message.replace('{message}', message).replace('{type}', options.type)).appendTo(container);\r\n      var close = function () {\r\n        div.remove();\r\n      };\r\n      if (!options.sticky) {\r\n        div.delay(options.time).fadeOut(options.fadeOut, close);\r\n      }\r\n      if (options.closable) {\r\n        div.find(setting.closeHandler).addBack(setting.closeHandler).bind('click', close);\r\n      } else {\r\n        div.addClass('nonclosable');\r\n      }\r\n      if (options.scrollTo) {\r\n        var rect = div[0].getBoundingClientRect();\r\n        if (rect.top < 0 || rect.top > screenHeight) {\r\n          div[0].scrollIntoView();\r\n        }\r\n      }\r\n    }\r\n  \r\n    function resize() {\r\n      screenHeight = window.innerHeight || document.documentElement.clientHeight;\r\n      screenWidth = window.innerWidth || document.documentElement.clientWidth;\r\n    }\r\n  \r\n    var flash = function () {\r\n      setting.method.apply(this, arguments);\r\n    };\r\n    flash.setting = setting;\r\n    flash.formatOptions = formatOptions;\r\n    setting.method = flash.defaultMethod = show;\r\n    window.flash = flash;\r\n  \r\n    TYPES.forEach(function (type) {\r\n      flash[type] = function (message, options) {\r\n        options = options || {};\r\n        options.type = type;\r\n        flash(message, options);\r\n      }\r\n    });\r\n  \r\n    $(window).resize(resize);\r\n  \r\n    function load() {\r\n      if (!container) {\r\n        container = $(setting.container);\r\n      }\r\n      $(setting.appendTo).append(container);\r\n      if (setting.window) {\r\n        window.flash = setting.window.flash;\r\n      }\r\n    }\r\n  \r\n    $(document).ready(resize).ready(load).bind('page:load turbolinks:load', load);\r\n  })(jQuery);","const config  = new Config( default_delay, settings_prefix, default_line_format );\r\n\r\nfunction show_pause_signal() {\r\n\tjQuery(\".loader-container\").addClass('hidden');\r\n    jQuery(\".pause-container\").removeClass('hidden')\r\n\tjQuery(\"#pause-button\").addClass('hidden');\r\n\tjQuery(\"#resume-button\").removeClass('hidden');\r\n\tjQuery('#processing-panel-title').text('PAUSED...');\r\n}\r\n\r\nfunction show_resume_signal() {\r\n\tjQuery(\".pause-container\").addClass('hidden')\r\n\tjQuery(\".loader-container\").removeClass('hidden');\r\n\tjQuery(\"#resume-button\").addClass('hidden');\r\n\tjQuery(\"#pause-button\").removeClass('hidden');\r\n\tjQuery('#processing-panel-title').text('PROCESSING...');\r\n\r\n}\r\n\r\nfunction update_total_sent( ) {\r\n\tconst $total_messges_sent = jQuery('#total-messages-sent');\r\n\tconst total_sent = +$total_messges_sent.text();\r\n\t$total_messges_sent.text( total_sent + 1);\r\n}\r\n\r\nfunction stop_sending( gauge, msg, msg_type, flag ){\r\n\r\n\tgauge.stop( );\r\n\tif ( msg ) show_alert( msg, msg_type );    \r\n\tjQuery('#processing-panel-title').text('PROCESSING ENDED');\r\n\tjQuery('#pause-button').addClass('hidden');\r\n\tjQuery('#resume-button').addClass('hidden');\r\n\r\n\tconfig.server.http.hideLoader();\r\n\tconfig.server.http.hide_sending_loader();\r\n\tenable_stage_buttons();\r\n\tshow_restart_and_log_btn( flag );\r\n\r\n\r\n}\r\n\r\nfunction successfull_end( gauge ) {\r\n\tstop_sending( gauge, 'Sending session has ended', 'info', true );\r\n}\r\n\r\nfunction interrupted_end( ) {\r\n\treturn stop_sending( 'Sending session interrupted', 'warning', false );\r\n}\r\n\r\nfunction display_new_balance( response ) {\r\n\t\t let balance = response.hasOwnProperty('balance') ? response.balance : false;\r\n\t\t balance    = balance ? balance : 'Balance: NA';\r\n\t\t jQuery('#current-balance').removeClass('hidden').text( balance );\r\n\r\n\t\t return response;\r\n}\r\n\r\nfunction display_results( response ) {\r\n\r\n\tlet total;\r\n\tif ( response ) {\r\n\r\n\t\tlet lead = response.hasOwnProperty('lead') ? `<span class=\"lead_in_result\">${response.lead}</span>: ` : '';\r\n\t\tif ( response.result ) {\r\n\t\t\ttotal = +jQuery('#accepted-messages').text( );\r\n\t\t\tjQuery('#accepted-messages').text( total+1 );\r\n\t\t\tjQuery('#accepted-messages-tab').prepend( lead+(response.description)+'<br>' );\r\n\t\t} else {\r\n\t\t\ttotal = +jQuery('#failed-messages').text( );\r\n\t\t\tjQuery('#failed-messages').text( total+1 );\r\n\t\t\tjQuery('#failed-messages-tab').prepend( lead+(response.description)+'<br>' );\r\n\t\t}\r\n\r\n\t}\r\n\treturn response;\r\n}\r\n\r\n\r\n\r\nfunction show_composed_msg( response ) {\r\n\r\n\tif ( response ) {\r\n\t\t let display_message = response.hasOwnProperty('message') ? response.message : null;\r\n\t\t let lead = response.hasOwnProperty('lead') ? `<span class=\"lead_in_result\">${response.lead}</span>: ` : '';\r\n\t\t if ( lead && display_message )\r\n\t\t\t  jQuery('#composed-message').html(lead+display_message);\r\n\t}\r\n\treturn response;\r\n}\r\n\r\n\r\nfunction init_for_start_of_sending_session( ) {\r\n\tconfig.processing.total_sent = 0;\r\n\tconfig.processing.current_msg_pointer = -1;\r\n\tconfig.processing.current_index_pointer = 0;\r\n\tconfig.server.http.show_sending_loader();\r\n\tjQuery('#total-available-messages').text(config.get_entry('total_leads'));\r\n\tdisable_stage_buttons( );\r\n\thide_restart_and_get_send_log_btn( );\r\n\tjQuery('#accepted-messages-tab, #failed-messages-tab, #composed-message').html('');\r\n\tjQuery('#failed-messages').text('0');\r\n\tjQuery('#accepted-messages').text('0');\r\n\tjQuery('#total-messages-sent').text('0');\r\n}\r\n\t\r\n\r\nfunction start_sending( ){\r\n\r\n\tif (  !invalid_data_found( )){\r\n\r\n\t\t   const packet = new Packet( config ); \r\n\t\t   const gauge  = new Gauge( config.get_entry( 'delay' ));\r\n\t\t   init_for_start_of_sending_session( );\r\n\r\n\t\t   new Streamer({\r\n\t\t\t\tgenerator: packet.sequencer( get_leads( )),\r\n\t\t\t\tstopButton: document.querySelector(\"#stop-button\"),\r\n\t\t\t\tpauseButton: document.querySelector(\"#pause-button\"),\r\n\t\t\t\tresumeButton: document.querySelector(\"#resume-button\"),\r\n\t\t\t\tdelayTime: config.get_entry( 'delay' ),\t\t\t\t\r\n\t\t\t\tsendMessage: packet => config.server.http.send_message( packet ),\r\n\t\t\t\tonMessageSent: (response) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst res = response.data;\t\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay_new_balance( res );\r\n\t\t\t\t\t\t\t\t\t\t\t\tshow_composed_msg( res );\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay_results( res );\r\n\t\t\t\t\t\t\t\t\t\t\t\tupdate_total_sent( );\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\tonStart: () => {\r\n\t\t\t\t\tjQuery('#pause-button').removeClass('hidden');\r\n\t\t\t\t\tjQuery('resume-button').addClass('hidden');\r\n\t\t\t\t},\r\n\t\t\t\t\t\t\t\r\n\t\t\t\tonError: (error) => {\r\n\t\t\t\t\tshow_alert( error, 'error');\r\n\t\t\t\t},\r\n\t\t\t\tonStreamEnd: () => {\r\n\t\t\t\t},\r\n\t\t\t\tonCancel: () => {\r\n\t\t\t\t},\r\n\t\t\t\r\n\t\t\t\tonTick: ( segment ) => {\r\n\t\t\t\t\tgauge.updateUI( segment);\r\n\t\t\t\t},\r\n\t\t\t\tonPause: () => {\r\n\t\t\t\t\tshow_pause_signal();\r\n\t\t\t\t},\r\n\t\t\t\tonResume: () => {\r\n\t\t\t\t\tshow_resume_signal();\r\n\t\t\t\t},\r\n\t\t\t\tonEnd: () => {\r\n\t\t\t\t\tsuccessfull_end( gauge );\r\n\t\t\t\t}\t\t\t\t\t\t\r\n\r\n\t\t\t}).start( );\r\n\t\t\r\n\t\t//    (new Rx({ \r\n\t\t// \t\t\t delay_time         : delay,\r\n\t\t// \t\t\t cancel_btn         : document.querySelector('#stop-button'),\r\n\t\t// \t\t\t tickResetAfterDelay: true,\r\n\t\t// \t\t\t asyncCall          : config.server.http.send_message,\r\n\t\t// \t\t\t producer           : packet.sequencer( get_leads( )),\r\n\t\t// \t\t\t onCycleStart       : update_total_sent( ),\r\n\t\t// \t\t\t onCycleProcessed   : [display_new_balance, show_composed_msg, display_results],\r\n\t\t// \t\t\t onError            : show_alert,\r\n\t\t// \t\t\t onTick             : gauge.update_ui,\r\n\t\t// \t\t\t onStreamEnd        : successfull_end,\r\n\t\t// \t\t\t onCancel           : interrupted_end,\r\n\t\t// \t\t   }, config.lw )\r\n\t\t//    ).run( );\r\n\t}\r\n}\r\n\r\n\r\n\r\n \r\nfunction index_action( $e, ...args ){\r\n\tconst index = {\r\n\t\tget_available_providers: ( ) => config.server.get_available_providers(),\r\n\t\tget_provider_fields: ( ) => config.server.get_provider_fields( ),\r\n\t\tget_sending_summary: get_sending_summary,\r\n\t\tstart_sending: start_sending,\r\n\t}\r\n    let f = $e.data('element-action');\r\n    if ( f && index.hasOwnProperty(f))\r\n         setTimeout(() => {\r\n            index[f](...args )\r\n         }, 0);\r\n}","function run_js_function(f, ...args) {\r\n    if ( f ) {\r\n        let arr = f.split('.'), fn = window[ arr[0] ];\r\n        for (let i = 1; i < arr.length; i++)\r\n            { fn = fn[ arr[i] ]; }\r\n        return fn.call( window, ...args );\r\n    }\r\n}\r\n\r\n\r\nfunction dec2hex(dec) {\r\n    return ('0' + dec.toString(16)).substring(-2)\r\n}\r\n\r\n\r\nfunction show_alert( alert_text, type ) {\r\n    type = type ? type : 'error';\r\n    flash(alert_text, {\r\n        type: type,\r\n        closable: true,\r\n      });\r\n}\r\n\r\n//-----------------------------\r\n\r\nfunction setup_rotating_messages( form_inputs ){\r\n    config.processing.message_container = [];\r\n    for ( var i = 0; i < form_inputs.length; i++) {\r\n          if ( form_inputs[i].value.trim() )  \r\n          config.processing.message_container.push( form_inputs[i].value );\r\n    }\r\n}\r\n\r\n\r\nfunction setup_index_links( form_inputs ){\r\n    config.processing.index_container = [];\r\n    if ( form_inputs.length ) {\r\n         var raw_lines = form_inputs[0].value.trim();\r\n         if ( raw_lines ) {\r\n              var lines = raw_lines.split(\"\\n\");\r\n              for ( var i = 0; i < lines.length; i++) {\r\n                    if ( lines[i].trim( ))  \r\n                          config.processing.index_container.push( lines[i].trim( ));\r\n              }\r\n         }                  \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction prepare_summary_panel( ) {\r\n\r\n    let $content = jQuery('.templates').find('table#fs-preview');\r\n    if ( $content.length ) {\r\n         for ( let key of config.reviewable_fields(  )){\r\n               let v = config.get_entry( key );\r\n               v     = typeof(v) === 'boolean' ? yes_no[v] : v;\r\n               $content.find('.review-'+key).text( v );\r\n         }\r\n         jQuery('table#preview-content').html( $content.html( ));\r\n    }     \r\n\r\n}\r\n\r\n\r\nfunction enable_stage_buttons( ) {\r\n    jQuery('.stage-link').removeClass('is-disabled');\r\n}\r\n\r\nfunction disable_stage_buttons( ) {\r\n    jQuery('.stage-link').addClass('is-disabled');\r\n}\r\n\r\n\r\nfunction hide_restart_and_get_send_log_btn( ){\r\n    jQuery('.restart-button').addClass('hidden');\r\n    jQuery('.show-provider-log-button').addClass('hidden');\r\n    jQuery('#stop-button').removeClass('hidden');\r\n    jQuery('#processing-panel-title').text('Processing...');\r\n}\r\n\r\nfunction show_restart_and_log_btn( show_log_btn ){\r\n    jQuery('.stop-button').addClass('hidden');\r\n    jQuery('.restart-button').removeClass('hidden');\r\n    if ( show_log_btn ){\r\n         let add_ons = config.get_entry('add_ons');\r\n         let live_log_available = add_ons.hasOwnProperty('live_log_available')\r\n                                ? add_ons.live_log_available : false;\r\n         if ( live_log_available )                                \r\n              jQuery('.show-provider-log-button').removeClass('hidden');\r\n    }         \r\n    jQuery('#processing-panel-title').text('End Of Processing');\r\n}\r\n\r\n\r\n\r\n\r\nfunction get_sending_summary( ){\r\n    let values = {};  \r\n    let get_messages = ( inputs ) => {\r\n        let m = [];\r\n        for( let i of [1,2,3,4])\r\n             if ( inputs.hasOwnProperty('message-'+i) && inputs['message-'+i].trim( ))\r\n                  m.push(inputs['message-'+i]);\r\n        return m;\r\n    }\r\n\r\n    jQuery.each(jQuery('form#msform').serializeArray(), function(i, field) {\r\n        values[field.name] = field.value;\r\n        config.set_entry( field.name, field.value );\r\n    });\r\n\r\n    config.set_entry('sender_id', values.sender_id);\r\n    config.set_entry('delay', values.delay);\r\n    config.set_entry('line_format', values.line_format);\r\n    config.set_entry('total_leads', get_leads( ).length);\r\n    config.set_entry('provider', values.service_provider);\r\n    config.set_entry('index_roll_in', values.index_roll_in);\r\n    config.set_entry('message_container', get_messages( values ));\r\n    config.set_entry('index_container', split_lines( jQuery('#indexes-container').val( )));\r\n\r\n    config.set_entry('total_messages', config.get_entry('message_container').length);\r\n    config.set_entry('total_indexes', config.get_entry('index_container').length);\r\n\r\n    config.server.http.showLoader( );\r\n    setTimeout(() => {\r\n        prepare_summary_panel( );\r\n        config.server.http.hideLoader( )\r\n    }, 1000);\r\n    \r\n}\r\n\r\n\r\n\r\n\r\nfunction construct_form_input_field( field_id, key, value, options, help ){\r\n\r\n    let entry;\r\n    if ( options ) {\r\n        entry = `<select id=\"${field_id}\" name=\"${field_id}\" data-keyname=\"${key}\">`;\r\n        for ( let option_name in options ) {\r\n            let selected = options[option_name] == value ? ' selected ' : '';\r\n            entry += `<option value=\"${options[option_name]}\" ${selected}>${option_name}</option>`;\r\n        }\r\n        entry +='</select>';\r\n\r\n    } else {\r\n        let type = key == 'password' ? 'password' : 'text';\r\n        entry = `<input type=\"${type}\" id=\"${field_id}\" name=\"${field_id}\" data-keyname=\"${key}\" \r\n                 placeholder=\"${key}\" value=\"${value}\"/>`;\r\n    }                \r\n\r\n    jQuery(document).on('keyup change', '#'+field_id, activate_provider_account_fetch_btn );\r\n    return `<div class=\"provider-input-group\">${entry}\r\n                <div class=\"provider-input-help\">${help}</div>\r\n            </div>`;\r\n}\r\n\r\n\r\nfunction stringify_provider_input_fields( input_fields ){\r\n    let output  = ['<h2 class=\"fs-title\" style=\"color:red;\">Provider Settings are unavailable or could not be fetched</h2>'];\r\n    config.set_page_accessibility_by_jump( 'provider-settings', true );\r\n    if ( input_fields ) {    \r\n         if ( Object.keys(input_fields).length ) {\r\n              output = [];\r\n              let fields = config.get_entry('fields');\r\n              let settings = {};\r\n              let settings_prefix = config.get_entry('settings_prefix');\r\n\r\n              for( let key in input_fields){\r\n                   let o = input_fields[key];\r\n                   let value = o.hasOwnProperty('value') ? o.value : null;\r\n                   let options = o.hasOwnProperty('options') && Object.keys(o.options).length ? o.options : null;\r\n                   let help = o.hasOwnProperty('help') ? o.help : '';\r\n                   if ( value !== null ) {\r\n                        let field_id = settings_prefix + key;\r\n                        fields[field_id] = {key: key, value: value};\r\n                        settings[key] = value;\r\n                        output.push( construct_form_input_field( field_id, key, value, options, help ));\r\n                   }\r\n              }\r\n              config.set_entry('fields',fields);\r\n              config.set_entry('settings',settings);\r\n         } else show_alert(`The returned Config Data for this Service provider is empty`, 'warning');\r\n    } else show_alert(`Could not retrieve service Provider's config data`);  \r\n    return output.join('<br>')\r\n}\r\n\r\n\r\n\r\n\r\nfunction extract_provider_info_and_add_ons( provider_fields ){\r\n\r\n    let add_ons = {};\r\n    if ( provider_fields && Object.keys(provider_fields).length ){\r\n         let global_info  = provider_fields.hasOwnProperty('global_info')\r\n                          ? provider_fields.global_info : null;\r\n\r\n         add_ons = provider_fields.hasOwnProperty('add_ons')\r\n                          ? provider_fields.add_ons : {};\r\n\r\n         if ( global_info ) {\r\n              let help_text = global_info.hasOwnProperty('help_text')\r\n                            ? global_info.help_text : null;\r\n              if ( help_text )\r\n                   show_alert(help_text, 'success');\r\n         }\r\n\r\n         let keys = Object.keys( add_ons );\r\n         if ( keys.length ) {\r\n              let $sender_id  = jQuery('#sender_id');\r\n              let placeholder = {\r\n                                  false:'This provider does not support Sender-IDs',   \r\n                                  true: 'Sender-ID'\r\n                                };\r\n              let supports_sender_id = add_ons.hasOwnProperty( 'supports_sender_id' )\r\n                                     ? add_ons.supports_sender_id : false;\r\n              config.set_entry('add_ons', add_ons );\r\n              $sender_id.val(supports_sender_id ? 'SMSINFO' : '')\r\n                        .attr('disabled', !supports_sender_id)\r\n                        .attr('placeholder', placeholder[supports_sender_id]);\r\n         }\r\n    }\r\n\r\n}\r\n\r\nfunction prepare_provider_fields( provider_fields ){\r\n    config.set_entry('provider', provider_fields.provider);\r\n    jQuery('#selected-service-provider').text( config.get_entry('provider'));\r\n    let input_fields = provider_fields && provider_fields.hasOwnProperty('input_fields')\r\n                     ? provider_fields.input_fields : '';\r\n    extract_provider_info_and_add_ons( provider_fields );\r\n\r\n    let pre_provider_settings_html = stringify_provider_input_fields( input_fields );\r\n    let provider_settings_html = get_provider_settings_html( pre_provider_settings_html );\r\n    jQuery('.provider-account-and-settings-container').html(provider_settings_html).removeClass('hidden');\r\n\r\n}\r\n\r\n\r\nfunction get_provider_settings_html( input_fields_html ){\r\n    let add_ons                = config.get_entry('add_ons');\r\n    let account_data_available = add_ons && add_ons.hasOwnProperty('account_info_available')\r\n                               ? add_ons.account_info_available : false;\r\n    let main_width = account_data_available ? '70%' : '100%';\r\n\r\n    let output = '<div id=\"provider-settings-container\" style=\"width: '+main_width+';\">'+input_fields_html+'</div>';\r\n    jQuery('.provider-account-and-settings-container').css('display','block');\r\n    if ( account_data_available ) {\r\n        jQuery('.provider-account-and-settings-container').css('display','flex');\r\n         output += `<div class=\"provider-account-info-container\">\r\n                         <div class=\"provider-account-info\">\r\n                             <h2 class=\"fs-title\" style=\"font-weight:bold; color: #ca0000c9;\">\r\n                                 Provider account info not available\r\n                             </h2>\r\n                             <p style=\"font-size:9px;text-align:center;\">Fill in the fields on the left side to authenticate first</p>\r\n                         </div>                \r\n                         <input type=\"button\" class=\"action-button specific-provider-account-info-btn is-disabled\" value=\"Account Info\" style=\"background:#06aeabba;\"/>\r\n                     </div>`;\r\n    }\r\n    return output;\r\n\r\n}\r\n\r\n\r\nfunction activate_provider_account_fetch_btn( e ){\r\n\r\n    jQuery('.specific-provider-account-info-btn').addClass('is-disabled');\r\n    if ( Object.keys(config.get_entry('fields')).length ) {\r\n         let fields_are_filled_in = true;\r\n         let fields = config.get_entry('fields');\r\n         let settings = config.get_entry('settings');\r\n         for ( let field_id in fields ) {\r\n               let v = String(jQuery('#'+field_id).val( )).trim( );\r\n               fields[field_id].value = v;\r\n               settings[fields[field_id].key] = v;\r\n               if ( !v ) {\r\n                     fields_are_filled_in = false;\r\n                     break;\r\n               }\r\n         }\r\n         config.set_entry('fields', fields);\r\n         config.set_entry('settings', settings);\r\n         if ( fields_are_filled_in )\r\n              jQuery('.specific-provider-account-info-btn').removeClass('is-disabled')\r\n    }\r\n}\r\n\r\n\r\nfunction remove_provider_account_info( message ) {\r\n\r\n    let output = '<h2 class=\"fs-title\" style=\"font-weight:bold; color: #ca0000c9;\">Provider account info not available</h2>'+\r\n                 '<p style=\"font-size:9px;text-align:center;\">Fill in the fields on the left side to authenticate first</p>';\r\n\r\n    jQuery('.provider-account-info').html(output);\r\n    jQuery('.specific-provider-account-info-btn').addClass('is-disabled');\r\n    if ( message )\r\n         show_alert(message);\r\n}\r\n\r\n\r\nfunction display_provider_account_info( response ) {\r\n    let output = '<h2 class=\"fs-title\" style=\"font-weight:bold; color: #ca0000c9;\">Account data could not be parsed</h2>';\r\n    if ( Object.keys(response).length ) {\r\n         output = '<table class=\"dynamic-account-info-table\"><tbody>';\r\n         for ( let key in response ) {\r\n             output += `<tr>\r\n                          <td>${key}</td>\r\n                          <td>${response[key]}</td>\r\n                        </tr>`;\r\n         }\r\n         output += '</tbody></table>';\r\n    }                 \r\n    jQuery('.provider-account-info').html(output);\r\n    jQuery('.specific-provider-account-info-btn').addClass('is-disabled');\r\n}\r\n\r\nfunction invalid_data_found( ){\r\n    var page_fault = false;\r\n    let config_pages = ['local-settings','tags-settings'];\r\n\r\n    let check_and_display = function( $e, page ) {\r\n        if ( !$e.val( ) && !$e.data('optional')) {\r\n             show_alert('Data on page '+page+' still needs to be updated');\r\n             jQuery(`i.stage-btn[data-page=\"${page}\"]`).trigger('click');\r\n             page_fault = true;\r\n             return false;\r\n        }\r\n        return true;     \r\n    }\r\n    config_pages.forEach( page => {\r\n        if ( !page_fault ) {\r\n              let inputs = jQuery('fieldset#'+page).find('input:not(.action-button)');\r\n              inputs.each(( k,input ) => {\r\n                if ( !check_and_display( jQuery(input), page ))  \r\n                      return false;\r\n              })   \r\n        }      \r\n        if ( !page_fault ) {              \r\n              let selects = jQuery('fieldset#'+page).find('select');\r\n              selects.each(( k,select ) => {\r\n                if ( !check_and_display( jQuery(select), page ))  \r\n                     return false;\r\n              })\r\n        }\r\n        if ( !page_fault ) {\r\n             if ( config.get_entry('total_leads') < 1 ) {\r\n                  show_alert('Data on the leads page still needs to be updated');\r\n                  jQuery(`i.stage-btn[data-page=\"leads\"]`).trigger('click');\r\n                  page_fault = true;\r\n              } else if ( parseInt(config.get_entry('index_roll_in')) < 1) {\r\n                  show_alert('Index roll in must have a valid value higher than 0');\r\n                  jQuery(`i.stage-btn[data-page=\"indexes\"]`).trigger('click');\r\n                  page_fault = true;\r\n              }\r\n        }\r\n    })\r\n\r\n    if ( !page_fault ) {\r\n          let total_messages = config.get_entry('total_messages');\r\n          let total_indexes = config.get_entry('total_indexes');\r\n          let msg_url_mode = config.get_entry('msg_url_mode');\r\n          if ( !total_messages ) {\r\n                show_alert('Messages container is empty');\r\n                jQuery(`i.stage-btn[data-page=\"messages\"]`).trigger('click');\r\n                page_fault = true;\r\n          } else if ( !total_indexes ) {\r\n                if ( msg_url_mode == 'index') {\r\n                     show_alert('You have chosen to apply indexing but no indexes were found');\r\n                     jQuery(`i.stage-btn[data-page=\"indexes\"]`).trigger('click');\r\n                     page_fault = true;\r\n                }\r\n          }  \r\n    }\r\n\r\n    return page_fault;\r\n}\r\n\r\nfunction split_lines( text_content ) {\r\n    text_content = text_content.trim();\r\n    return text_content ? text_content.split('\\n') : [];\r\n}\r\n\r\n\r\nfunction get_leads( ) {\r\n    let leads = split_lines( jQuery('#leads-container').val( ));\r\n    jQuery(\"#leads-count\").text(leads.length);\r\n    return leads;\r\n}\r\n\r\n","/*\n * NumberedTextarea - jQuery Plugin\n * Textarea with line numbering\n *\n * Copyright (c) 2015 Dariusz Arciszewski\n *\n * Requires: jQuery v2.0+\n *\n * Licensed under the GPL licenses:\n *   http://www.gnu.org/licenses/gpl.html\n */\n\n(function ($) {\n \n    $.fn.numberedtextarea = function(options) {\n \n        var settings = $.extend({\n            color:          null,        // Font color\n            borderColor:    null,        // Border color\n            class:          null,        // Add class to the 'numberedtextarea-wrapper'\n            allowTabChar:   false,       // If true Tab key creates indentation\n        }, options);\n \n        this.each(function() {\n            if(this.nodeName.toLowerCase() !== \"textarea\") {\n               return false;\n            }\n            \n            addWrapper(this, settings);\n            addLineNumbers(this, settings);\n            \n            if(settings.allowTabChar) {\n                $(this).allowTabChar();\n            }\n        });\n        \n        return this;\n    };\n    \n    $.fn.allowTabChar = function() {\n        if (this.jquery) {\n            this.each(function() {\n                if (this.nodeType == 1) {\n                    var nodeName = this.nodeName.toLowerCase();\n                    if (nodeName == \"textarea\" || (nodeName == \"input\" && this.type == \"text\")) {\n                        allowTabChar(this);\n                    }\n                }\n            })\n        }\n        return this;\n    }\n    \n    function addWrapper(element, settings) {\n        var wrapper = $('<div class=\"numberedtextarea-wrapper\"></div>').insertAfter(element);\n        $(element).detach().appendTo(wrapper);\n    }\n    \n    function addLineNumbers(element, settings) {\n        element = $(element);\n        \n        var wrapper = element.parents('.numberedtextarea-wrapper');\n        \n        // Get textarea styles to implement it on line numbers div\n        var paddingLeft = parseFloat(element.css('padding-left'));\n        var paddingTop = parseFloat(element.css('padding-top'));\n        var paddingBottom = parseFloat(element.css('padding-bottom'));\n        \n        var lineNumbers = $('<div class=\"numberedtextarea-line-numbers\"></div>').insertAfter(element);\n        \n        element.css({\n            paddingLeft: paddingLeft + lineNumbers.width() + 'px'\n        }).on('input propertychange change keyup paste', function() {\n            renderLineNumbers(element, settings);\n        }).on('scroll', function() {\n            scrollLineNumbers(element, settings);\n        }); \n        \n        lineNumbers.css({\n            paddingLeft: paddingLeft + 'px',\n            paddingTop: paddingTop + 'px',\n            lineHeight: element.css('line-height'),\n            fontFamily: element.css('font-family'),\n            width: lineNumbers.width() - paddingLeft + 'px',\n        });\n        \n        element.trigger('change');\n    }\n    \n    function renderLineNumbers(element, settings) {\n        element = $(element);\n        \n        var linesDiv = element.parent().find('.numberedtextarea-line-numbers');\n        var count = element.val().split(\"\\n\").length;\n        var paddingBottom = parseFloat(element.css('padding-bottom'));\n        \n        linesDiv.find('.numberedtextarea-number').remove();\n        \n        for(i = 1; i<=count; i++) {\n            var line = $('<div class=\"numberedtextarea-number numberedtextarea-number-' + i + '\">' + i + '</div>').appendTo(linesDiv);\n            \n            if(i === count) {\n            \tline.css('margin-bottom', paddingBottom + 'px');\n            }\n        }\n    }\n    \n    function scrollLineNumbers(element, settings) {\n        element = $(element);\n        var linesDiv = element.parent().find('.numberedtextarea-line-numbers');\n        linesDiv.scrollTop(element.scrollTop());\n    }\n    \n    function pasteIntoInput(el, text) {\n        el.focus();\n        if (typeof el.selectionStart == \"number\") {\n            var val = el.value;\n            var selStart = el.selectionStart;\n            el.value = val.slice(0, selStart) + text + val.slice(el.selectionEnd);\n            el.selectionEnd = el.selectionStart = selStart + text.length;\n        } else if (typeof document.selection != \"undefined\") {\n            var textRange = document.selection.createRange();\n            textRange.text = text;\n            textRange.collapse(false);\n            textRange.select();\n        }\n    }\n\n    function allowTabChar(el) {\n        $(el).on('keydown', function(e) {\n            if (e.which == 9) {\n                pasteIntoInput(this, \"\\t\");\n                return false;\n            }\n        });\n\n        // For Opera, which only allows suppression of keypress events, not keydown\n        $(el).on('keypress', function(e) {\n            if (e.which == 9) {\n                return false;\n            }\n        });\n    }\n \n}(jQuery));",";(function($) {\r\n    // Activate jQuery events / MacLeen v1 04-2021\r\n    var current_fs, next_fs, previous_fs; //fieldsets\r\n    var left, opacity, scale; //fieldset properties which we will animate\r\n    var animating; //flag to prevent quick multi-click glitches\r\n    var tabs = $(\".tabs li a\");\r\n\r\n    get_and_dump_leads = function (  role ){\r\n        config.server.get_wp_leads( role )\r\n          .then( response => {\r\n                const data = response.data.join(\"\\n\");\r\n                const append_mode = $('#leads_append_mode').find('option:selected').val( );\r\n                switch( append_mode ) {\r\n                    case 'replace' : $('#leads-container').val( data );\r\n                                    break;   \r\n                    default        : const v = $('#leads-container').val().trim();\r\n                                    $('#leads-container').val( v+\"\\n\"+data);\r\n                                    break;\r\n                }                \r\n          });\r\n    }\r\n\r\n    $(\".lined\").numberedtextarea();\r\n    $(\".panel-footer\").html(localizer.copyright_data);\r\n        \r\n    $('#service_provider').on('change', function( ){\r\n        config.set_entry('add_ons', {});\r\n        config.set_entry('provider', $(this).val( ));\r\n        $('#selected-service-provider').text( config.get_entry('provider'));\r\n        config.set_page_accessibility_by_jump( 'provider', true );\r\n        config.set_page_accessibility_by_jump( 'provider-settings', false );\r\n    });\r\n\r\n    $('#use_shortner_code_as_route_arg').on('change', function( ){\r\n        config.set_entry('use_shortner_code_as_route_arg', $(this).val( ));\r\n    });\r\n\r\n    $('#full_country_name').on('change', function( ){\r\n        let $this = $('#full_country_name option:selected');\r\n        config.set_entry('sending_target_country_code', $this.val( ));\r\n        config.set_entry('full_country_name', $this.text( ));\r\n        config.set_entry('dial_code_length', $this.data('dial_code_length'));\r\n        config.set_page_accessibility_by_jump( 'local-settings', true );\r\n    });\r\n\r\n    $('#msg_url_mode').on('change', function () {\r\n        let v = $(this).val( );\r\n        switch ( v ) {\r\n            case 'shortner': $('#language-indicator').attr('disabled', false);\r\n                             $('#indexes-container').attr('disabled', true);\r\n                             $('#index_roll_in').attr('disabled', true);\r\n                             \r\n                             break;\r\n            case 'index'  :  $('#language-indicator').attr('disabled', false);\r\n                             $('#indexes-container').attr('disabled', false);\r\n                             $('#index_roll_in').attr('disabled', false);                            \r\n                            \r\n                             break;\r\n            default       :  $('#language-indicator').attr('disabled', true);\r\n                             $('#indexes-container').attr('disabled', true);\r\n                             $('#index_roll_in').attr('disabled', true);\r\n                            \r\n                             break;\r\n        }\r\n        config.set_entry('indexing_method', v);\r\n    });\r\n\r\n\r\n    $('#leads_input_source').on('change', function(){\r\n        const $this          = $(this);\r\n        const selectedOption = $this.find('option:selected');\r\n        const info           = selectedOption.data('info');\r\n        $('#leads_input_selection_title').text(info).css('color', 'blue');\r\n        get_and_dump_leads( $this.val( ));\r\n    });\r\n    \r\n\r\n    $(document).on('click', '.specific-provider-account-info-btn', function( e ){\r\n        e.preventDefault( );\r\n        if ( Object.keys( config.get_entry( 'settings' )))\r\n                config.server.get_account_info( )\r\n                    .then(display_provider_account_info) \r\n                    .catch(remove_provider_account_info);\r\n        else remove_provider_account_info('Some Provider fields are missing or invalid');\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n    $('#upload-new-plugin-btn').click( function () {\r\n        document.getElementById('zip-file-input').click();\r\n    });\r\n\r\n    $('#zip-file-input').change( function () {\r\n        let file = this.files[0];\r\n\r\n        if (!file) return;\r\n        if (!file.name.endsWith('.zip')) {\r\n            show_alert( 'Only zip files are allowed', 'error' );\r\n            return;\r\n        }\r\n\r\n        let formData = new FormData();\r\n        formData.append('zip_file', file);\r\n        config.server.install_plugin( formData )\r\n            .then( msg => {\r\n                if ( msg )\r\n                    setTimeout(() => {show_alert( msg, 'success' ); jQuery('#provider-tab').trigger('click')},1000);\r\n            });\r\n    });\r\n\r\n    $('#macleen-selected-purchasable-plugin-purchase').click( function(){\r\n        const selected_plugin = $(this).attr('data-selected-plugin'); \r\n        const plugin_location = $(this).attr('data-plugin-location'); \r\n        if ( selected_plugin && plugin_location )\r\n            window.open( `${plugin_location}/${selected_plugin}`, '_blank');\r\n        else show_alert('Please select a plugin in the purchasable area first','warning');\r\n    })\r\n\r\n    $('#delete_log_file').on('click', function(){\r\n        const log_date = $(this).attr('data-logDate');\r\n        if ( log_date ) {\r\n            config.server.delete_log_by_date( log_date )\r\n                  .then(( ) => {\r\n                    Logging.reset();\r\n                    show_alert( `Log File for ${log_date} successfully deleted`, 'success');\r\n                }); \r\n                  \r\n        } else show_alert('Invalid log file identifier', 'error');\r\n    });\r\n\r\n    $('#delete_analytics_file').on('click', function(){\r\n        const file_path = $(this).attr('data-filepath');\r\n        if ( file_path ) {\r\n            config.server.delete_analytics_by_path( file_path )\r\n                  .then(( ) => {\r\n                    Analytics.reset();\r\n                    show_alert( `Hashed-Dump with index ${dump_index} successfully deleted`, 'success');\r\n                }); \r\n                  \r\n        } else show_alert('Unknown hash-index or invalid file path', 'error');\r\n    });\r\n\r\n    $(\".sound-control\").on('click', function(){\r\n        if ($(\".loader-container\").is(':visible')) {\r\n            var soundTrack = document.getElementById(\"sound-track\");    \r\n            config.set_entry('sound_is_on', !config.get_entry('sound_is_on'));\r\n            config.get_entry('sound_is_on') ? $(\"#loader\").addClass(( ) => {\r\n                                                  $('#loader').removeClass(( ) => {\r\n                                                      soundTrack.play( )\r\n                                                      return 'zz_loader';\r\n                                                  });   \r\n                                                  return 'loader-md';\r\n                                              }).attr(\"src\",`${localizer.plugin_url}assets/admin/img/loader.gif`)\r\n                                           : $(\"#loader\").addClass(( ) => {\r\n                                                  $('#loader').removeClass(( ) => {\r\n                                                      soundTrack.pause( )\r\n                                                      return 'loader-md';\r\n                                                  });   \r\n                                                  return 'zz_loader';\r\n                                             }).attr(\"src\",`${localizer.plugin_url}assets/admin/img/zz_loader.gif`)\r\n        }    \r\n    });\r\n\r\n    \r\n    $('.btn').on(\"click\", function(){\r\n        $('.btn').toggleClass('close-btn');\r\n        $('.sidebar').toggleClass('sidebar-open');\r\n    })\r\n\r\n    $(\".next\").click(function(){\r\n        if(animating) return false;\r\n        animating = true;\r\n        $('.fs').removeClass('current-fs');\r\n        current_fs = $(this).parent();\r\n        next_fs = $(this).parent().next();\r\n\r\n        let page = current_fs.prop('id');\r\n        if ( !['provider','provider-settings'].includes( page )){\r\n            config.set_page_accessibility_by_jump( page, true );\r\n        }\r\n        //activate next step on progressbar using the index of next_fs\r\n        $(\"#progressbar li\").eq($(\"fieldset\").index(next_fs)).addClass(\"active\");\r\n        \r\n        //show the next fieldset\r\n        next_fs.addClass('current-fs');\r\n        next_fs.show(); \r\n\r\n        //hide the current fieldset with style\r\n        current_fs.animate({opacity: 0}, {\r\n            step: function(now, mx) {\r\n                //as the opacity of current_fs reduces to 0 - stored in \"now\"\r\n                //1. scale current_fs down to 80%\r\n                // scale = 1 - (1 - now) * 0.2;\r\n                //2. bring next_fs from the right(50%)\r\n                left = (now * 50)+\"%\";\r\n                //3. increase opacity of next_fs to 1 as it moves in\r\n                opacity = 1 - now;\r\n                current_fs.css({\r\n            // 'transform': 'scale('+scale+')',\r\n            'position': 'absolute'\r\n        });\r\n                next_fs.css({'position': 'relative','left': left, 'opacity': opacity});\r\n            }, \r\n            duration: 600, \r\n            complete: function(){\r\n                current_fs.hide();\r\n                animating = false;\r\n                index_action( next_fs, current_fs, next_fs );\r\n            }, \r\n            //this comes from the custom easing plugin\r\n            easing: 'easeInOutBack'\r\n        });\r\n        \r\n    });\r\n\r\n    $(\".previous\").click(function(){\r\n        if(animating) return false;\r\n        animating = true;\r\n        \r\n        $('.fs').removeClass('current-fs');\r\n        current_fs = $(this).parent();\r\n        previous_fs = $(this).parent().prev();\r\n        \r\n        //de-activate current step on progressbar\r\n        $(\"#progressbar li\").eq($(\"fieldset\").index(current_fs)).removeClass(\"active\");\r\n        $(\"#progressbar li\").eq($(\"fieldset\").index(previous_fs)).addClass(\"active\");\r\n        \r\n        //show the previous fieldset\r\n        previous_fs.addClass('current-fs');\r\n        previous_fs.show(); \r\n        //hide the current fieldset with style\r\n        current_fs.animate({opacity: 0}, {\r\n            step: function(now, mx) {\r\n                //as the opacity of current_fs reduces to 0 - stored in \"now\"\r\n                //1. scale previous_fs from 80% to 100%\r\n                // scale = 1 - (1 - now) * 0.2;\r\n                //2. bring next_fs from the left(50%)\r\n                right = (now * 50)+\"%\";\r\n                //3. increase opacity of previous_fs to 1 as it moves in\r\n                opacity = 1 - now;\r\n                // current_fs.css({'left': left});\r\n                current_fs.css({\r\n                     'position': 'absolute'\r\n                    // 'transform': 'scale('+scale+')', \r\n                    // 'opacity': opacity\r\n                });\r\n                previous_fs.css({'position': 'relative','right': right, 'opacity': opacity});\r\n            }, \r\n            duration: 600, \r\n            complete: function(){\r\n                current_fs.hide();\r\n                animating = false;\r\n                index_action( previous_fs, current_fs, previous_fs );\r\n            }, \r\n            //this comes from the custom easing plugin\r\n            easing: 'easeInOutBack'\r\n        });\r\n    });\r\n\r\n    $(\".stage-btn\").click(function( ){\r\n\r\n        let page = $(this).data(\"page\");\r\n\r\n        if(animating) return false;\r\n        animating = true;\r\n        let stage_id = $(this).data(\"target\");\r\n        current_fs = $('.current-fs').first();\r\n        $('.fs').removeClass('current-fs');\r\n        next_fs = $(stage_id);\r\n\r\n        //activate next step on progressbar using the index of next_fs\r\n        $(\"#progressbar li\").eq($(\"fieldset\").index(next_fs)).addClass(\"active\");\r\n        \r\n        //show the next fieldset\r\n        next_fs.addClass('current-fs');\r\n        next_fs.show(); \r\n\r\n        //hide the current fieldset with style\r\n        current_fs.animate({opacity: 0}, {\r\n            step: function(now, mx) {\r\n                //as the opacity of current_fs reduces to 0 - stored in \"now\"\r\n                //1. scale current_fs down to 80%\r\n                scale = 1 - (1 - now) * 0.2;\r\n                //2. bring next_fs from the right(50%)\r\n                left = (now * 50)+\"%\";\r\n                //3. increase opacity of next_fs to 1 as it moves in\r\n                opacity = 1 - now;\r\n                current_fs.css({\r\n                    //'transform': 'scale('+scale+')',\r\n                    'position': 'absolute'\r\n                });\r\n                next_fs.css({'position': 'relative','left': left, 'opacity': opacity});\r\n            }, \r\n            duration: 600, \r\n            complete: function(){\r\n                current_fs.hide();\r\n                animating = false;\r\n                index_action( next_fs, current_fs, next_fs );\r\n            }, \r\n            //this comes from the custom easing plugin\r\n            easing: 'easeInOutBack'\r\n        });\r\n\r\n    });\r\n\r\n    $('.tab').on('click', function( ){\r\n        $('.tab-label').removeClass('active-tab');\r\n        $(this).find('label').addClass('active-tab');\r\n    });\r\n\r\n    $('.stop-button').on('click', function( e ){\r\n        e.preventDefault( );\r\n        $('#stop-button').val('Stopping...');\r\n        config.set_entry('halted_by_user', true);\r\n    });\r\n\r\n    $('.restart-button').on('click', function( ){\r\n        $(\"a.provider-settings-stage\").find('i.stage-btn').trigger('click');\r\n        $('ul#progressbar').children('li').removeClass('active');\r\n        $('ul#progressbar').children('li').removeClass('active');\r\n        $('ul#progressbar').children().eq(0).addClass('active');\r\n        $('ul#progressbar').children().eq(1).addClass('active');\r\n    });\r\n\r\n    tabs.click(function() {\r\n        var content = this.hash.replace('/','');\r\n        tabs.removeClass(\"active\");\r\n        $(this).addClass(\"active\");\r\n        $(\"#content\").find('p').addClass('hidden');\r\n        $(content).removeClass('hidden');\r\n    });\r\n\r\n\r\n    const tab_buttons = document.querySelectorAll(\".responsive-tab-btn\");\r\n    const tab_panels = document.querySelectorAll(\".responsive-tab-panel\");\r\n\r\n    tab_buttons.forEach((button) => {\r\n        button.addEventListener(\"click\", () => {\r\n            // Remove active class from all buttons\r\n            tab_buttons.forEach((btn) => btn.classList.remove(\"active\"));\r\n            button.classList.add(\"active\");\r\n\r\n            // Hide all tab panels\r\n            tab_panels.forEach((panel) => panel.classList.remove(\"active\"));\r\n            \r\n            // Show the selected tab\r\n            document.getElementById(button.dataset.tab).classList.add(\"active\");\r\n        });\r\n    });\r\n    setTimeout(()=> index_action( $('#provider.fs' )),100);\r\n\r\n}(jQuery));","class Streamer {\r\n    \r\n    constructor(settings) {\r\n\r\n        \r\n        this.cycle_tick       = 0;\r\n        this.settings         = settings;\r\n        this.generator        = settings.generator();\r\n        this.delayTime        = settings.delayTime * 1000;        // Convert to milliseconds\r\n        \r\n        this.pause$           = new rxjs.BehaviorSubject(false);  // Control streams\r\n        this.resume$          = new rxjs.Subject();\r\n        this.stop$            = new rxjs.Subject();\r\n\r\n        this.subscription     = new rxjs.Subscription();\r\n        this.isStopped        = false;\r\n        this.isStreamComplete = false;\r\n\r\n        this.setupButtons();\r\n\r\n    }\r\n\r\n    setupButtons() {\r\n        this.settings.stopButton   ? this.settings.stopButton.addEventListener('click' , ( )=> this.stop())   : void(0);\r\n        this.settings.pauseButton  ? this.settings.pauseButton.addEventListener('click', ( )=> this.pause())  : void(0)\r\n        this.settings.resumeButton ? this.settings.resumeButton.addEventListener('click',( )=> this.resume()) : void(0) \r\n    }\r\n\r\n\r\n    #createMessageStream() {\r\n\r\n        return new rxjs.Observable(observer => {\r\n\r\n            const sendNext = () => {\r\n                if (this.isStopped) {\r\n                    observer.complete();\r\n                    return;\r\n                }\r\n\r\n                if (this.pause$.getValue()) {\r\n                    console.log(\"⏸️ Paused. Waiting for resume...\");\r\n                    this.resume$.pipe(rxjs.take(1)).subscribe(() => {\r\n                        console.log(\"▶️ Resumed!\");\r\n                        sendNext();\r\n                    });\r\n                    return;\r\n                }\r\n\r\n                const { value: packet, done } = this.generator.next();\r\n                if (done) {\r\n                    observer.complete();\r\n                    this.settings.onStreamEnd();\r\n                    this.isStreamComplete = true;\r\n                    return;\r\n                }\r\n\r\n                this.settings.sendMessage(packet)\r\n                    .then(response => {\r\n                        this.settings.onMessageSent(response);\r\n                        this.cycle_tick = 0; \r\n\r\n                        // After message is sent, wait for the delay before continuing\r\n                        if (!this.isStopped && !this.isStreamComplete) {\r\n                            if (this.pause$.getValue()) {\r\n                                this.resume$.pipe(rxjs.take(1)).subscribe(() => sendNext());\r\n                            } else {\r\n                                rxjs.timer(this.delayTime).subscribe(() => sendNext());\r\n                            }\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        console.error(\"❌ Message sending error:\", error);\r\n                        this.settings.onError(error);\r\n                        observer.error(error);\r\n                    });\r\n            };\r\n\r\n            sendNext();\r\n        });\r\n    }\r\n\r\n    start_ticker( ){\r\n        this.tick_handle = setInterval(() => this.settings.onTick( this.cycle_tick++ ), 1400 ); // ~1/2sec more to accomodate for server delays\r\n        return this;\r\n    }\r\n\r\n    stop_ticker( ){\r\n        clearInterval( this.tick_handle );\r\n        return this;\r\n    }\r\n    start() {\r\n\r\n        this.isStopped        = false;\r\n        this.isStreamComplete = false;\r\n\r\n        this.settings.onStart( );\r\n\r\n        const messageStream$ = this.#createMessageStream().pipe(\r\n            rxjs.takeUntil(this.stop$)\r\n        );\r\n        \r\n        this.start_ticker( ).subscription.add(\r\n            messageStream$.subscribe({\r\n                next: (message) => console.log(\"📩 Processed message:\", message),\r\n                error: (err) => {\r\n                    console.error(\"❌ Error in stream:\", err);\r\n                    this.settings.onError(err);\r\n                    this.stop();\r\n                },\r\n                complete: () => {\r\n                    console.log(\"✅ Streaming finished.\");\r\n                    this.settings.onStreamEnd();\r\n                    this.stop();\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    stop() {\r\n        this.isStopped = true;\r\n        this.stop$.next();\r\n        this.cleanup();\r\n\r\n        this.settings.onEnd();\r\n    }\r\n\r\n    pause() {\r\n        this.pause$.next(true);\r\n        this.settings.onPause();\r\n        this.stop_ticker( );\r\n    }\r\n\r\n    resume() {\r\n        this.pause$.next(false);\r\n        this.resume$.next();\r\n        this.settings.onResume();\r\n        this.start_ticker( );\r\n    }\r\n\r\n    cleanup() {\r\n        this.stop_ticker( );\r\n        this.subscription.unsubscribe();\r\n        this.subscription = new rxjs.Subscription();\r\n    }\r\n}","document.addEventListener('DOMContentLoaded', function () {\r\n    const forms = document.querySelectorAll('form');\r\n    \r\n    forms.forEach(form => {\r\n        form.addEventListener('submit', function (e) {\r\n            const mobileField = form.querySelector('input[name=\"mobile_number\"]');\r\n            if (mobileField) {\r\n                const mobileNumber = mobileField.value.trim();\r\n                const regex        = /^\\+?[1-9]\\d{1,14}$/; // E.164 format\r\n\r\n                if (!mobileNumber) {\r\n                    e.preventDefault();\r\n                    show_alert('SMS-Bulk-Sender: Mobile number is required.');\r\n                } else if (!regex.test(mobileNumber)) {\r\n                    e.preventDefault();\r\n                    show_alert('SMS-Bulk-Sender: Invalid mobile number format.');\r\n                }\r\n            }\r\n        });\r\n    });\r\n});\r\n","const Logging = (function( $ ){\r\n\r\n    let data = []; // This will hold the data fetched from the backend\r\n    let currentPage = 1;\r\n    const rowsPerPage = 10;\r\n    let currentSendingDate = ''; // Store the current sending date globally\r\n    const usage_licence = localizer.license ? localizer.license : 'Basic';\r\n    const tableBody = document.querySelector('#dataTable tbody');\r\n    \r\n    function truncateString(str, maxLength) {\r\n        if (str.length > maxLength) {\r\n            return str.slice(0, maxLength) + '...';\r\n        }\r\n        return str;\r\n    }\r\n    \r\n    function get_available_log_files() {\r\n        config.server.get_available_log_files()\r\n            .then(response => {\r\n                const tableHtml = availableLogFilesToHtmlTable(response.data);\r\n                $('#available_log_files').html(tableHtml);\r\n\r\n                // Rebind event listeners after rendering the table\r\n                document.querySelectorAll('.get-log-file-by-date').forEach(row => {\r\n                    row.addEventListener('click', function() {\r\n                        fetchLogData(this.dataset.logdate);\r\n                    });\r\n                });\r\n            });\r\n    }\r\n\r\n    function fetchLogData(date) {\r\n        if ( usage_licence == 'Pro') {\r\n             data = '';\r\n             currentPage = 1;\r\n             $('#log_file_content').addClass('hidden');\r\n             config.server.get_log_by_date(date)\r\n                .then(response => {\r\n                    data = cleanAndParseJsonArray(response.data.raw_data);\r\n                    currentSendingDate = date; // Store the current sending date\r\n                    generateTableHeaders();\r\n                    displayData(currentPage, currentSendingDate); // Pass the current sending date\r\n                    $('#log_file_content').removeClass('hidden');\r\n                });\r\n        } else show_alert('This functionality is available in the Pro version only', 'warning');\r\n    }\r\n\r\n    function cleanAndParseJsonArray(jsonStrings) {\r\n        return jsonStrings\r\n            .map(str => {\r\n                try {\r\n                    // Remove trailing carriage return and whitespace\r\n                    const cleanedStr = str.trim().replace(/\\r$/, '');\r\n                    // Parse JSON\r\n                    return JSON.parse(cleanedStr);\r\n                } catch (error) {\r\n                    // Skip invalid JSON lines\r\n                    return null;\r\n                }\r\n            })\r\n            .filter(item => item !== null); // Remove null entries\r\n    }\r\n\r\n    function availableLogFilesToHtmlTable(data) {\r\n        if (data.length) {\r\n            let html = `<table class=\"\"><tbody>`;\r\n            html += `\r\n                    <tr>\r\n                        <th>Date</th>\r\n                        <th>Created at</th>\r\n                        <th>Updated at</th>\r\n                        <th>Total messages</th>\r\n                        <th>Successful messages</th>\r\n                        <th>Failed messages</th>                    \r\n                    </tr>`;\r\n\r\n            for (const entry of data) {\r\n                html += `\r\n                            <tr class=\"row-clickable get-log-file-by-date\" data-logdate=\"${entry.date}\">\r\n                                <td>${entry.date}</td>\r\n                                <td>${entry.header.created_at}</td>\r\n                                <td>${entry.header.updated_at}</td>\r\n                                <td>${entry.header.total_number_of_lines}</td>\r\n                                <td>${entry.header.successful_messages}</td>\r\n                                <td>${entry.header.failed_messages}</td>\r\n                            </tr>`;\r\n            }\r\n            html += '</tbody></table>';\r\n            return html;\r\n        } else return '<div class=\"error\">[ 404 ] - No log files were found</div>';\r\n    }\r\n\r\n    function jsonToHtmlTable(item) {\r\n        let html = `<table class=\"table\"><tbody>`;\r\n        for (const entry of Object.keys(item)) {\r\n            if (['request','response'].includes( entry )){\r\n                html += `\r\n                        <tr>\r\n                            <td colspan=\"2\"><span style=\"color:yellow\">${entry.toUpperCase( )}</span></td>\r\n                        </tr>\r\n                    `;\r\n                for (const [key, value] of Object.entries(item[entry])) {\r\n                    html += `\r\n                        <tr>\r\n                            <th>${key}</th>\r\n                            <td>${value}</td>\r\n                        </tr>\r\n                    `;\r\n                }\r\n            }    \r\n        }    \r\n        html += `</tbody></table>` ;\r\n        return html;\r\n    }\r\n\r\n    // Function to generate table headers dynamically\r\n    function generateTableHeaders() {\r\n        const headerRow = document.getElementById('tableHeader');\r\n        headerRow.innerHTML = ''; // Clear existing headers\r\n\r\n        if ( data.length > 0 ) {\r\n             const theaders = ['Provider','SenderID','Name','Recipient','Sent','Balance'];\r\n             theaders.forEach(key => {\r\n                 const th = document.createElement('th');\r\n                 th.innerText = key.replace(/_/g, ' '); // Replace underscores with spaces\r\n                 headerRow.appendChild(th);\r\n             });\r\n        }\r\n    }\r\n\r\n    // Function to display data for the current page\r\n    function displayData(page, sending_date) {\r\n        \r\n        tableBody.innerHTML = '';\r\n        document.querySelector('#delete_log_file').dataset.logdate = sending_date;\r\n        const start = (page - 1) * rowsPerPage;\r\n        const end = start + rowsPerPage;\r\n        const paginatedData = data.slice(start, end);\r\n\r\n        paginatedData.forEach(item => {\r\n            const row = document.createElement('tr');\r\n            if ( row ) {\r\n                row.classList.add('row-clickable');\r\n                row.addEventListener('click', () => showPopup(item, sending_date));\r\n\r\n                if (item.hasOwnProperty('response') && item.hasOwnProperty('request')) {\r\n                    const response = item.response;\r\n                    const request  = item.request;\r\n                    const tdata = {\r\n                        'Provider' : response.hasOwnProperty('provider') ? response.provider : 'NA',\r\n                        'SenderID' : request.hasOwnProperty('sender_id') ? request.sender_id : 'NA',\r\n                        'Name'     : request.hasOwnProperty('full_name') ? truncateString(request.full_name,20) : 'NA',\r\n                        'Recipient': response.hasOwnProperty('lead') ? response.lead : 'NA',\r\n                        'Sent'     : response.hasOwnProperty('result') ? (response.result ? '<span class=\"success\">Success</span>': '<span class=\"failed\">Failed</span>') : 'NA',\r\n                        'Balance'  : response.hasOwnProperty('balance') ? '<span class=\"warning\">'+response.balance+'</span>' : 'NA',\r\n                    }\r\n                    Object.keys(tdata).forEach(key => {\r\n                         const td = document.createElement('td');\r\n                         td.innerHTML = tdata[key]; // Replace underscores with spaces\r\n                         row.appendChild(td);\r\n                    });\r\n                    tableBody.appendChild(row);\r\n                }\r\n            }    \r\n        });\r\n\r\n        // Update the sending date in the HTML\r\n        document.getElementById('sending-date').innerText = sending_date || 'N/A'; // Fallback to 'N/A' if undefined\r\n        document.getElementById('pageInfo').innerText = `Page ${page} of ${Math.ceil(data.length / rowsPerPage)}`;\r\n    }\r\n\r\n    // Function to show popup with full row data\r\n    function showPopup(item) {\r\n        const popup = document.getElementById('popup');\r\n        const popupData = document.getElementById('popupData');\r\n        popupData.innerHTML = jsonToHtmlTable(item);\r\n\r\n        // Add the 'open' class to trigger the animation\r\n        popup.style.display = 'block';\r\n        setTimeout(() => {\r\n            popup.classList.add('open');\r\n        }, 10); // Small delay to allow the display change to take effect\r\n    }\r\n\r\n    // Function to close the popup\r\n    function closePopup() {\r\n        const popup = document.getElementById('popup');\r\n\r\n        // Add the 'closing' class to trigger the closing animation\r\n        popup.classList.remove('open');\r\n        popup.classList.add('closing');\r\n\r\n        // Wait for the animation to finish before hiding the popup\r\n        setTimeout(() => {\r\n            popup.style.display = 'none';\r\n            popup.classList.remove('closing'); // Reset the class for future use\r\n        }, 300); // Match the duration of the CSS transition\r\n    }\r\n\r\n    try {\r\n        // Pagination event listeners\r\n        document.getElementById('prevPage').addEventListener('click', () => {\r\n            if (currentPage > 1) {\r\n                currentPage--;\r\n                displayData(currentPage, currentSendingDate); // Pass the current sending date\r\n            }\r\n        });\r\n\r\n        document.getElementById('nextPage').addEventListener('click', () => {\r\n            if (currentPage < Math.ceil(data.length / rowsPerPage)) {\r\n                currentPage++;\r\n                displayData(currentPage, currentSendingDate); // Pass the current sending date\r\n            }\r\n        });\r\n    } catch ( e ) {}    \r\n\r\n    function reset( ){\r\n        tableBody.innerHTML = '';\r\n        $('#log_file_content').addClass('hidden');\r\n        get_available_log_files();\r\n    }\r\n    // Initial setup: Fetch available log files\r\n\r\n    return {\r\n        reset: reset,\r\n        closePopup: closePopup,\r\n    }\r\n}( jQuery ))","const Analytics = (function( $ ){\r\n\r\n    let data = []; // This will hold the data fetched from the backend\r\n    let currentPage = 1;\r\n    const rowsPerPage = 10;\r\n    let currentSendingDate = '';\r\n    const usage_licence = localizer.license ? localizer.license : 'Basic';\r\n    const tableBody = document.querySelector('#dataTable tbody');\r\n    \r\n    function truncateString(str, maxLength) {\r\n        if (str.length > maxLength) {\r\n            return str.slice(0, maxLength) + '...';\r\n        }\r\n        return str;\r\n    }\r\n    \r\n    \r\n    function get_available_analytics_files() {\r\n        config.server.get_available_analytics_files()\r\n            .then(response => {\r\n                const tableHtml = availableAnalyticsFilesToHtmlTable(response.data);\r\n                $('#available_analytics_files').html(tableHtml);\r\n\r\n                // Rebind event listeners after rendering the table\r\n                document.querySelectorAll('.get-analytics-file-by-path').forEach(row => {\r\n                    row.addEventListener('click', function() {\r\n                        fetchAnalyticsData(this.dataset.sendingdate, this.dataset.filepath);\r\n                    });\r\n                });\r\n            });\r\n    }\r\n\r\n    function fetchAnalyticsData(sending_date, file_path) {\r\n        if ( usage_licence == 'Pro') {\r\n             data = '';\r\n             currentPage = 1;\r\n             $('#analytics_file_content').addClass('hidden');\r\n             config.server.get_analytics_file_by_path(file_path)\r\n                .then(response => {\r\n                    data = response.data;\r\n                    generateTableHeaders();\r\n                    displayData(currentPage);\r\n                    document.querySelector('#delete_analytics_file').dataset.filepath = file_path;\r\n                    document.querySelector('#sending_date').innerText = sending_date;\r\n                    \r\n                    $('#analytics_file_content').removeClass('hidden');\r\n                });\r\n        } else show_alert('This functionality is available in the Pro version only', 'warning');\r\n    }\r\n\r\n    function availableAnalyticsFilesToHtmlTable(data) {\r\n        if (data.length) {\r\n            let locator;\r\n            let html = `<table class=\"\"><tbody>`;\r\n            html += `\r\n                    <tr>\r\n                        <th>Compaign Date</th>\r\n                        <th>Updated at</th>\r\n                        <th>Size</th>\r\n                    </tr>`;\r\n\r\n            for (const entry of data) {\r\n                html += `\r\n                            <tr class=\"row-clickable get-analytics-file-by-path\" data-sendingDate=\"${entry.file}\" data-filePath=\"${entry.path}\">\r\n                                <td>${entry.file}</td>\r\n                                <td>${entry.updated_at}</td>\r\n                                <td>${entry.size}</td>\r\n                            </tr>`;\r\n            }\r\n            html += '</tbody></table>';\r\n            return html;\r\n        } else return '<div class=\"error\">[ 404 ] - No data was found</div>';\r\n    }\r\n\r\n    function jsonToHtmlTable(item) {\r\n        let html = `<table class=\"table\"><tbody>`;\r\n        for (const entry of Object.keys(item)) {\r\n            if (['data','meta_data'].includes( entry )){\r\n                html += `\r\n                        <tr>\r\n                            <td colspan=\"2\"><span style=\"color:yellow\">${entry.toUpperCase( )}</span></td>\r\n                        </tr>\r\n                    `;\r\n                for (const [key, value] of Object.entries(item[entry])) {\r\n                    html += `\r\n                        <tr>\r\n                            <th>${key}</th>\r\n                            <td>${value}</td>\r\n                        </tr>\r\n                    `;\r\n                }\r\n            }    \r\n        }    \r\n        html += `</tbody></table>` ;\r\n        return html;\r\n    }\r\n\r\n    // Function to generate table headers dynamically\r\n    function generateTableHeaders() {\r\n        const headerRow = document.getElementById('tableHeader');\r\n        headerRow.innerHTML = ''; // Clear existing headers\r\n\r\n        if ( data.length > 0 ) {\r\n             const theaders = ['HashIndex', 'Recipient','Name','Country','Clicked'];\r\n             theaders.forEach(key => {\r\n                 const th = document.createElement('th');\r\n                 th.innerText = key;\r\n                 headerRow.appendChild(th);\r\n             });\r\n        }\r\n    }\r\n\r\n    // Function to display data for the current page\r\n    function displayData(page) {\r\n        tableBody.innerHTML = '';\r\n        const start = (page - 1) * rowsPerPage;\r\n        const end = start + rowsPerPage;\r\n        const paginatedData = data.slice(start, end);  // Now 'data' is an array\r\n    \r\n        paginatedData.forEach(item => {\r\n            const row = document.createElement('tr');\r\n            if (row) {\r\n                row.classList.add('row-clickable');\r\n                row.addEventListener('click', () => showPopup(item));\r\n    \r\n                if (item.hasOwnProperty('data') && item.hasOwnProperty('meta_data')) {\r\n                    const lead_data = item.data;\r\n                    const lead_meta_data = item.meta_data;\r\n                    const reacted = Object.entries(lead_meta_data).length ? 'Yes' : 'No';\r\n                    const tdata = {\r\n                        'HashIndex': item.hasOwnProperty('index') ? item.index : 'NA',\r\n                        'Recipient': lead_data.hasOwnProperty('recipient') ? lead_data.recipient : 'NA',\r\n                        'Name': lead_data.hasOwnProperty('full_name') ? truncateString(lead_data.full_name, 20) : 'NA',\r\n                        'Country': lead_data.hasOwnProperty('sending_target_country_code') ? lead_data.sending_target_country_code : 'NA',\r\n                        'Clicked': reacted == 'Yes' ? '<span class=\"success\">Yes</span>' : '<span class=\"failed\">No</span>',\r\n                    }\r\n                    Object.keys(tdata).forEach(key => {\r\n                        const td = document.createElement('td');\r\n                        td.innerHTML = tdata[key]; // Replace underscores with spaces\r\n                        row.appendChild(td);\r\n                    });\r\n                    tableBody.appendChild(row);\r\n                }\r\n            }\r\n        });\r\n    \r\n        // Update the sending date in the HTML\r\n        document.getElementById('pageInfo').innerText = `Page ${page} of ${Math.ceil(data.length / rowsPerPage)}`;\r\n    }\r\n    \r\n    // Function to show popup with full row data\r\n    function showPopup(item) {\r\n        const popup = document.getElementById('popup');\r\n        const popupData = document.getElementById('popupData');\r\n        popupData.innerHTML = jsonToHtmlTable(item);\r\n\r\n        // Add the 'open' class to trigger the animation\r\n        popup.style.display = 'block';\r\n        setTimeout(() => {\r\n            popup.classList.add('open');\r\n        }, 10); // Small delay to allow the display change to take effect\r\n    }\r\n\r\n    // Function to close the popup\r\n    function closePopup() {\r\n        const popup = document.getElementById('popup');\r\n\r\n        // Add the 'closing' class to trigger the closing animation\r\n        popup.classList.remove('open');\r\n        popup.classList.add('closing');\r\n\r\n        // Wait for the animation to finish before hiding the popup\r\n        setTimeout(() => {\r\n            popup.style.display = 'none';\r\n            popup.classList.remove('closing'); // Reset the class for future use\r\n        }, 300); // Match the duration of the CSS transition\r\n    }\r\n\r\n    try {\r\n        // Pagination event listeners\r\n        document.getElementById('prevPage').addEventListener('click', () => {\r\n            if (currentPage > 1) {\r\n                currentPage--;\r\n                displayData(currentPage, currentSendingDate ); \r\n            }\r\n        });\r\n\r\n        document.getElementById('nextPage').addEventListener('click', () => {\r\n            if (currentPage < Math.ceil(data.length / rowsPerPage)) {\r\n                currentPage++;\r\n                displayData(currentPage, currentSendingDate ); \r\n            }\r\n        });\r\n    } catch ( e ) {}    \r\n\r\n    function reset( ){\r\n        tableBody.innerHTML = '';\r\n        $('#analytics_file_content').addClass('hidden');\r\n        get_available_analytics_files();\r\n    }\r\n\r\n    return {\r\n        reset: reset,\r\n        closePopup: closePopup,\r\n    }\r\n}( jQuery ))","class Timer {\r\n\r\n    static TIMER_PORTION  = 0.05;\r\n\r\n    constructor( $jquery_dom_timer, $jquery_dom_countdown, delay ) {\r\n      this.timer_instance   = null;\r\n      this.dom_timer        = $jquery_dom_timer;\r\n      this.dom_countdown    = $jquery_dom_countdown;\r\n      this._delay           = delay;\r\n      this.cycle_count_down = delay;\r\n    }\r\n\r\n    //-----------------------------\r\n\r\n    set delay( v ) {\r\n        if ( isNaN( v ))\r\n             throw new Error('Delay must be a whole number')\r\n        this._delay = v;     \r\n    }\r\n\r\n    //-----------------------------\r\n\r\n    get delay( ) {\r\n        return this._delay;\r\n    }    \r\n\r\n   //-----------------------------\r\n\r\n    #evoluate(w) {\r\n        this.dom_timer.css(\"width\", ( w <= 0 ? 0 : w >= 100 ? 100 : w ) + '%');\r\n        this.dom_countdown.text( Number( this.cycle_count_down ).toFixed( 0 ));\r\n    }\r\n\r\n    //-----------------------------\r\n\r\n    reset() {\r\n        this.cycle_count_down = this._delay;\r\n        this.#evoluate(0);\r\n    }\r\n\r\n    //-----------------------------\r\n\r\n    stop() {\r\n        clearInterval(this.timer_instance);\r\n        this.reset();\r\n    }    \r\n\r\n\r\n    #timer_cycle( ...args ){\r\n\r\n        let self = this;\r\n        this.reset();\r\n        return new Promise( resolve => {\r\n            let portions = self._delay / Timer.TIMER_PORTION;\r\n            let cycle_slice = 100 / portions;\r\n            let timer_evolution = 0;\r\n            clearInterval(self.timer_instance);\r\n            self.reset();\r\n            self.timer_instance = setInterval(\r\n                function() {\r\n                    timer_evolution   += cycle_slice;\r\n                    self.#evoluate(timer_evolution);\r\n                    self.cycle_count_down -= Timer.TIMER_PORTION;\r\n                    if ( timer_evolution >= 100 ) {\r\n                        clearInterval(self.timer_instance);\r\n                        resolve(...args );\r\n                    }\r\n                }, \r\n                Timer.TIMER_PORTION * 1000);\r\n        })\r\n    }\r\n\r\n\r\n    run_timer_cycle( caller, ...args ) {\r\n        this.#timer_cycle(...args ).then( caller )\r\n    }\r\n\r\n\r\n}"]}